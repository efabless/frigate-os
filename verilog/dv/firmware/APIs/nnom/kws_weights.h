#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_KERNEL_0 {9, 25, 15, -10, -16, 69, 37, -3, -32, -30, 64, 1, -9, -52, -18, 3, -17, -27, -34, 44, -56, -44, -21, 10, 43, -55, -29, -11, 38, 23, -35, -12, 3, 23, 13, 5, -2, 20, 3, -5, -54, -21, -6, -17, 21, -10, -24, -22, 0, 14, -3, -6, -55, -52, 17, 10, 26, -6, -55, -25, -2, -30, -12, 19, 27, 33, 1, 16, -22, -22, -2, 3, 7, 27, -5, 41, 12, 21, -4, -21, 36, -15, 0, 22, 6, 25, -4, -3, 11, 34, 16, 2, -3, 6, 13, 29, 17, -24, -16, 27, -33, 29, 3, -27, 17, -51, 16, 16, -30, -20, -39, 15, 5, -29, -42, -39, -2, 8, -9, -38, 25, 3, -7, 20, -16, 50, -9, -10, -1, -32, 44, -6, -12, 3, -38, 42, -4, -15, 3, -24, 11, 4, -6, 2, -14, -12, 8, -8, -11, 7, -27, 10, 12, -4, 5, -28, 9, 12, 5, 16, -8, -15, -35, -19, 35, 5, -10, -13, 18, 23, -21, -2, 20, 17, -7, -27, 15, 49, 12, -37, -6, 4, 50, -6, -52, 1, 13, 33, -6, -56, 14, 10, 24, -15, -32, 31, 4, 3, -5, -22, -3, -6, -14, 11, 34, 19, 49, -4, 10, 1, 45, -12, -5, -1, 27, 45, 60, 48, 5, 18, -39, -8, 87, 32, 3, -55, -28, -40, -5, 31, 31, -17, -14, -42, -34, 15, -10, -3, -11, -5, -23, -17, 15, 9, -3, -13, -37, -17, 18, 31, -9, -30, -36, 20, 41, -11, -30, -27, 25, 31, -13, -18, -5, 11, 28, -2, 10, 6, 1, -6, 3, 15, 8, -10, -19, 7, 20, -11, 13, 5, 41, -39, -7, 2, 27, 53, -47, 5, 6, 2, 36, -50, 21, 22, -35, 0, -38, 41, 25, -30, -44, 1, 36, 5, -19, -44, 22, -7, -5, -1, -21, 15, -22, -23, -1, -19, 14, -16, -4, -8}

#define TENSOR_CONV2D_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV2D_BIAS_0 {-34, -18, -9, 81, 11, 59, -22, 11}

#define TENSOR_CONV2D_BIAS_0_DEC_BITS {7}

#define CONV2D_BIAS_LSHIFT {5}

#define CONV2D_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_1_KERNEL_0 {-7, 22, -24, -48, -30, 14, -9, 29, -7, -3, -21, 20, -53, -32, -9, 34, -43, -36, -21, -42, -79, -13, -18, 51, -23, 41, 5, -36, -11, 10, -68, 17, 20, -14, -19, 16, -15, 0, -59, 41, -26, -33, -55, -35, -44, 18, -86, 38, -6, 0, -44, -5, -6, 15, -60, 37, -16, -42, 29, -25, 5, -51, -40, 54, 9, -27, -12, -35, 9, 25, -61, -17, 45, -1, -24, -26, -11, 37, -49, 61, 24, -53, 13, -1, -22, -68, -4, -2, -8, -17, 2, -44, 39, 29, 6, 72, 25, 15, 21, -16, 6, -32, 2, 5, 26, -1, 2, -1, 35, -25, 28, 23, 42, -20, 35, -25, -5, 3, 51, -4, 32, -57, 12, -24, -8, -2, -31, 26, 32, -26, -11, -50, 7, -2, 39, 9, -10, -30, -5, -40, 10, -16, 5, -25, -19, -72, -4, -11, 32, -16, -11, 34, -36, -35, -5, 14, 11, 10, -22, 12, 15, -43, -48, -22, 4, -8, -7, -32, -32, -33, 56, 2, 37, -30, -11, 26, -67, -36, 34, 19, 2, 8, -34, 3, -34, -14, -29, -38, 17, -15, 2, 9, 26, -1, 43, -13, -7, 37, -30, 31, -10, -21, 1, -42, 4, 4, -12, -38, 2, 10, 12, 8, -3, -6, 0, 28, 10, 8, 31, -32, 7, -12, 9, 55, 18, -8, 14, 1, 3, 10, -6, 7, 40, -2, -1, -3, 7, 17, -7, -1, 43, 4, 46, 14, -22, -15, 15, 16, 33, 2, 3, 29, 36, 4, -4, -2, 53, 5, 4, -25, 15, 35, 45, -14, 53, -52, -1, 1, -13, 18, 37, -1, -4, 7, -10, 38, 17, 15, -14, 2, 14, 26, 1, -19, -2, -7, 18, -27, -26, -10, -18, 28, -8, -23, 32, 5, -35, -13, -7, 12, -21, -25, 29, 13, 20, -2, -37, 13, 1, 28, 5, 14, 0, -4, -3, 44, 6, 30, -12, 4, -47, -5, -7, 1, 7, -44, 51, 21, 0, 17, 6, -6, 6, -38, 26, -16, 22, 5, -15, 49, 25, 27, -30, -5, -21, 8, 15, 16, 33, -23, 15, 26, 9, 18, 26, -2, -27, -15, -32, -25, -13, -3, -11, 81, -19, 30, -24, -56, -53, 6, -11, 23, -2, -4, -16, 5, -24, 36, -14, 20, -8, 2, -22, -27, 59, -26, -30, 19, 13, -34, -26, -27, 17, -3, 33, -31, 45, -12, -52, -14, -27, 0, 38, 17, -4, 6, -30, -4, 37, -12, 4, 42, -5, -44, -39, -15, -8, 19, 17, 0, 11, -49, -26, -28, -18, 16, 29, 3, 12, -38, -1, 7, 25, -33, -7, 35, -11, -39, -35, -26, 18, -23, -30, 11, 61, -60, -17, 1, 5, -1, 23, 3, 3, -48, -9, 34, 16, -51, 2, 41, -24, -4, 9, -10, 29, -6, 10, 8, -6, -42, 5, 12, 23, -1, 45, -10, 45, 3, 13, 32, 32, 10, -36, 86, 16, -12, 14, 46, -10, -26, -68, -10, 30, -50, -1, 26, 17, 27, 43, -28, 47, -9, 15, 3, 18, -30, 22, 25, -19, -39, -3, 29, 7, -25, -39, 45, -60, -47, 17, 3, 12, -22, 16, -20, 51, -16, 5, 16, -14, 4, 72, 5, 34, 9, -4, -19, -17, 14, -10, 27, -65, -32, 29, 13, -11, -37, -8, 17, 0, -2, 16, 3, -6, -32, -22, -56, 7, 9, -5, -48, 8, -19, 25, 22, 3, 4, 23, -12, 0, 13, -34, 63, -25, -15, 16, -19, -45, 26, 29, -22, -18, -8, 8, -42, -52, -12, 33, 19, -57, -14, 1, 19, 36, 2, -18, -2, -38, -28, 24, -26, -28, -3, -12, -50, 28, -8, -36, -15, -59, 21, 17, -52, 11, -30, -13, 8, 8, 26, -24, -19, -12, 35, -26, -1, 19, 50, -9, -37, 14, 0, -11, -13, -12, 32, 21, -30, 29, 50, -32, 58, 13, 9, 47, 23, 8, 8, -4, -27, -59, 16, -33, -29, 43, -42, 0, -30, -8, 42, 19, -90, 33, 2, 16, 20, 19, 56, 52, -45, 8, 3, 63, 8, 0, -8, -30, -4, 0, 38, 5, 58, 12, 28, -13, -17, -16, -23, 27, 39, -16, 6, -24, 2, 28, 41, 25, 22, 6, 24, -44, -27, -29, -1, -12, -17, 24, 28, -8, -28, -15, 18, -8, -7, 1, -12, -33, -2, 74, 16, 8, 28, 14, 28, -29, -36, -10, -4, -29, -11, 7, -25, -16, 13, 29, -18, 11, 26, 13, 16, -6, 23, 30, -19, -10, 54, 52, 32, -32, 2, -16, 26, -29, -37, -16, -3, 17, 21, 19, -14, 2, 44, 26, 18, 39, 3, 10, -11, 11, 27, 2, -7, -1, 32, 56, -9, 15, -76, 47, -21, 16, -55, -11, 1, 16, 21, -4, -24, 18, -1, 46, 2, -21, -19, 28, -23, -32, 28, -32, -12, -31, -25, 17, 5, 21, 2, 36, -9, 13, -12, 7, -49, -44, 61, 41, -32, -21, 25, 32, -23, -40, 39, -38, 20, -34, -31, 13, -29, 38, -9, 51, -26, -14, 18, 45, -6, -32, 17, -28, -35, -26, 35, 33, -7, 4, -29, 6, -16, 24, 22, 8, -40, 19, 7, 17, -7, 28, 55, 38, 63, -33, -13, -41, 27, -24, 20, 26, 8, 13, -27, -10, 36, -70, -16, -16, 4, 15, 13, 40, -15, -65, -2, -27, -12, 36, -15, -6, 5, -18, -66, 40, -7, 21, -22, 10, 33, -24, 24, 5, -9, 28, 28, 53, 9, -63, 0, -21, 5, 38, 13, 15, -52, -52, 0, -21, 3, -9, -68, -52, -3, -2, 16, 42, -23, 19, -26, 1, 19, -39, 35, -13, -27, -38, 18, 30, -29, -16, 6, -85, 5, -42, -37, -14, -40, 52, 22, 19, 0, 44, -39, -45, -5, 45, 33, -41, -65, -12, 26, -10, 5, 70, 39, -45, 19, -4, -60, -2, 6, 6, 100, -23, 10, -10, -26, 15, -61, -2, -16, -12, -24, 35, 56, 27, 2, -23, -4, -27, -11, 12, -31, -9, 6, 27, 38, -16, -4, -7, -2, 20, -12, 1, 14, -73, -21, 0, -1, 33, -56, 22, -4, 7, 4, -10, 21, -4, -15, 20, 64, 37, -2, -38, -13, -9, -45, -10, 18, -25, 10, 21, 35, 30, -43, 25, -21, 29, 12, -30, 5, 50, -15, 16, 20, -36, 50, -35, 24, -12, -1, 0, -10, -31, -27, -20, 15, 9, -34, -45, 17, 53, -42, 15, 7, 3, -66, 36, -29, 1, -13, -2, -49, -1, -26, 69, 18, 42, -76, 13, -63, 45, -52, 11, 14, 39, -41, -11, -17, 4, -69, 15, -21, -47, -4, 7, -29, 35, -15, -16, 34, 61, -35, -19, -14, 75, -29, -29, 17, -49, 6, -55, 11, 54, 2, -50, -12, -7, 34, 6, 46, 16, -43, -15, 4, 59, 6, -9, 6, -20, -31, -41, 21, -53, 51, 12, -10, 20, 25, -61, 26, -45, 16, 3, 59, -19, -31, -36, 4, 6, 32, 7, -3, 14, -6, -32, 5, 15, -28, 38, -15, -60, -47, -30, -1, 5, 0, -67, 27, 21, 36, -8, 9, -36, -15, -84, 27, -31, -65, -46, -73, -40, 18, 37, 42, 10, 62, -20, 15, 14, -4, -13, -15, -49, 4, -94, -5, -34, 0, 5, 15, -24, -12, -87, -18, -73, 62, -6, 7, 33, -28, 5, -22, -6, -11, 9, -39, -27, 1, -26, 22, 18, -27, 22, 29, 23, 30, -50, 14, 21, 61, 27, -47, -25, -47, 34, 12, 26, -24, 16, 38, 27, -17, 62, 28, 14, -27, 34, 58, 47, 11, -1, 9, -2, 10, -28, 13, 25, -38, -11, 20, 24, -20, 32, 33, -24, -64, 3, -9, 6, -51, 1, 15, -6, -13, -16, 18, -7, 31, 9, 3, 2, -64, 5, 3, 0, -51, 5, 20, 1, -54, -30, 41, 23, -25, 3, -24, 12, 3, -12, 19, -72, 35, -16, -5, 15, -31, -4, 19, -15, -28, -9, 32, -46, -58, 18, 9, 22, 8, 49, -28, -41, -3, 15, 46, -49, 22, -33, 9, 3, -5, 7, 38, -9, -1, 2, 18, -25, -74, 5, 1, -7, -1, 69, -4, -32, -45, 39, 47, -62, -12, -57, -36, -33, -56, 24, -57, -17, -49, 21, 3, -4, 2, -10, 10, 12, -24, -24, 23, 40, 18, -31, 42, -60, -9, -39, -15, -25, -27, 30, -57, -33, -28, -12, -1, -37, 27, -7, 16, 6, 0, -1, 15, -25, 5, 19, -9, 12, 18, -21, 25, -6, -13, 8, -29, -20, -5, 15, 0, -9, -33, 6, 23, 8, 36, 2, -40, -14, -33, 25, -14, 16, 2, 17, 46, 43, 10, -11, 50, 1, -1, 35, 14, 22, -22, 32, 27, 9, 38, -13, -23, -1, -21, -1, -9, 62, -47, 31, 9, -39, -36, -21, 24, -21, -47, -15, 1, 2, -8, -32, 8, 21, 14, 26, -77, 37, -15, -50, 1, 51, -31, 34, 32, 9, -23, 3, -17, 42, -6, 11, 2, -27, -15, -38, -39, -16, 9, -34, -33, 22, -39, -30, -32, 38, -39, 16, -8, 35, -15, -8, -14, 31, 5, 81, -20, -36, -5, 4, -31, -21, -15, -69, 25, -14, -17, -3, 19, 21, 8, 21, -7, 26, -13, 24, -18, -14, 11, 52, -14, -2, -43, 23, -30, -22, -15, 38, 0, -7, 9, 47, 21}

#define TENSOR_CONV2D_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV2D_1_BIAS_0 {105, 32, -65, -15, 15, -15, 34, -26, -19, 28, -12, 28, 0, 20, 23, 28}

#define TENSOR_CONV2D_1_BIAS_0_DEC_BITS {6}

#define CONV2D_1_BIAS_LSHIFT {5}

#define CONV2D_1_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_2_KERNEL_0 {-12, 30, 4, -18, -9, -2, -1, 4, 24, -4, -25, 6, 20, -26, 20, -10, 12, 15, -12, -23, 15, -12, 9, -14, 2, 25, -1, 10, 9, 8, 3, 21, -22, 39, -22, 3, -1, -1, -38, 9, 17, 8, -10, 19, 17, -8, 13, -19, 2, 8, -29, 9, -1, -21, -23, 10, -2, 0, 0, 20, 4, 8, 22, 10, -19, 26, -5, 6, -18, -6, -10, 3, 0, -4, 21, 6, -6, -20, 18, -3, -13, 21, -17, -3, -15, -12, 8, 11, -25, 2, 6, 9, -8, 10, -8, 10, -21, 8, -14, 6, -12, -30, -9, -11, -32, 11, -15, -9, -15, 6, 43, -15, 15, 2, -24, 0, -2, 4, 0, 7, 42, 3, 7, 14, 6, 15, 18, 12, -21, 16, -15, 13, -8, 3, 8, -12, -22, -15, -4, -24, 1, -29, 18, 14, -18, 11, 10, 13, -7, -5, 8, -10, -23, -12, 0, -23, -9, 22, -9, -24, 15, 8, 22, 6, 11, 27, -18, -8, 2, -10, 3, 21, -17, -36, -5, 19, -11, 6, 3, -6, -10, 20, 20, -18, -1, -18, 13, -23, -24, 3, 19, 8, 25, 5, -11, -34, -13, -43, 10, -36, 14, 3, -29, -5, 2, -4, 11, 6, 7, -4, -12, 8, 2, -5, 3, -6, -28, -3, 4, -45, -39, -21, -22, -10, 19, -4, -13, -23, -8, 0, -9, -14, 1, 9, 16, 19, -24, 11, 0, 7, -3, -8, 9, 19, 3, 27, -27, 12, 2, 2, 12, -7, 13, -11, -6, 10, -29, -14, -9, -10, -6, 37, -15, -5, -16, 21, 2, 4, -3, 6, 8, 15, -27, -13, -12, 15, -3, 9, -1, 8, 6, 27, 1, 18, -11, 4, 2, -11, 36, 11, -10, -15, 35, 24, -32, -13, -3, 7, -17, -11, -39, -17, -1, 44, 18, -6, -15, -15, -17, 2, -8, 18, 12, 0, -20, 0, 6, -7, 20, 16, -4, -9, -3, -4, 28, 14, -16, 11, 7, -6, 24, -10, -42, 9, -25, 8, -31, -10, -5, -9, 0, 9, -11, 10, -5, 10, 19, 3, -10, 12, 5, 2, -31, -2, 14, -18, 6, 11, -22, -7, 10, -8, 5, -25, -20, -6, -21, -14, -31, -14, -12, -1, -11, -6, -11, -7, -33, 0, 40, 4, 0, -4, 3, -10, 13, 31, 15, 8, 0, 17, -23, -14, 17, -1, 12, 12, 14, 52, 21, -7, -17, 10, -21, -10, -16, 5, -11, -21, -8, 8, -6, -21, -10, 24, 15, 9, 7, 31, 2, 8, -12, 8, -17, -8, -6, 6, 20, -22, 11, -23, 2, 0, 20, -17, -47, -27, -26, 3, -31, 10, 10, -11, 9, 1, 11, -1, 0, -7, 10, -9, 2, -32, -13, 12, -14, 21, 15, -7, 11, 8, -4, 25, -7, 14, 0, 21, -18, -1, 7, 1, -27, 48, -5, 23, -17, 17, 14, 12, 24, 4, -14, -18, -11, 20, 28, 32, -6, 8, 5, 43, 3, 8, 9, 32, 18, -11, -22, -24, -7, 10, 19, 2, -4, 6, -1, 13, 11, -15, -1, -13, -7, 8, 2, 3, 2, -2, 13, 8, -16, -6, -12, 3, 3, 3, 35, 16, 50, -1, -25, -40, 17, 6, 19, -19, -9, -22, -25, -5, -26, -27, -5, 22, -14, 18, 26, -16, -16, -15, -19, 25, -13, 11, 0, 7, -16, 2, -3, -6, -22, -27, -17, -4, 12, -18, -14, -18, -7, -16, -18, -28, -33, -11, -46, -32, -38, 32, -15, 24, -7, -50, -23, 0, -27, -15, 0, -17, -33, 38, -17, 5, 2, -6, 6, 31, -22, 12, -15, 28, -8, -7, 21, -22, -8, 20, -19, 4, -7, 8, -6, -10, -24, 9, -19, -7, 4, -11, -30, -17, 4, -16, -25, -9, 9, -2, -9, -7, 0, 1, 6, 4, -4, 25, 2, 18, -3, 7, -1, 4, 4, -7, 7, 21, -1, 13, -8, 1, -5, -13, -32, 7, 13, 5, 4, 3, 8, -2, -2, -23, -4, 23, -3, -5, 17, 0, 1, 9, 8, -1, 2, 14, 4, -13, 17, -15, -17, -2, -20, -30, 18, 6, 1, -1, -12, 21, 4, -10, 31, -26, 0, -5, 1, 2, 8, -22, 16, -5, 10, -22, 1, 13, -4, -26, -31, -6, 12, -17, -17, -10, 4, -23, 4, -6, 17, -8, 1, 13, 12, -24, 14, -4, 2, -9, 8, -6, 18, -9, 3, 13, -8, -7, -16, -3, 2, -12, 0, 6, 9, 20, -1, 12, 14, -24, 16, 11, 20, -27, -2, -2, -9, -4, 24, 11, 12, -3, 10, -5, 5, 2, 9, 15, 7, -13, -13, 0, 5, -13, 7, 8, 5, 17, -23, -6, 39, -15, -3, 5, 33, 1, -19, 24, -20, -8, 10, -29, -5, 13, 7, 23, 8, -29, -10, -3, 9, -18, -35, -7, -7, 3, -4, -18, -8, -17, -31, -16, 1, 1, 29, -7, 10, 29, 1, 8, -4, 43, 29, -6, -8, 20, -10, 7, 1, -13, -5, 32, -7, 52, -28, -24, -5, -10, 27, -11, -4, 6, -1, 8, -9, -19, 13, 6, -8, 33, 9, -30, -1, 2, 22, 11, -26, 13, 7, -13, -7, -22, -3, -14, -13, -2, 15, -20, -18, -7, 23, -2, 2, 1, 9, -20, -27, 7, 17, -11, 2, -9, 17, 0, -20, -3, -11, 7, 27, 10, -4, -1, -33, 9, -16, 3, 8, 9, 4, 17, -23, -6, 17, 0, 24, -14, -3, -9, 12, -2, 16, -19, 28, 17, 19, 19, -33, -17, 13, -8, 21, -1, -21, -11, 18, -19, -8, -8, -7, 7, -22, -12, -4, -6, -6, 24, 29, -3, -5, -2, 12, 17, -35, -6, -11, -5, 21, -11, 11, -30, 14, -2, -3, -8, -6, -30, -14, 14, -11, 23, 19, 0, -12, 13, -3, -21, -32, 20, 48, -2, 39, 11, -17, -7, -10, 9, -24, 10, 0, -1, -4, -10, -18, -8, 34, 20, -31, -19, -4, 7, -1, -8, -3, 25, -23, 18, -2, -12, 11, -37, 38, 23, 2, -10, -23, -6, 5, 18, -11, -26, -17, 26, 69, -35, -36, 18, 0, -7, 4, -12, 5, 10, -3, 3, -34, 3, -7, 16, 16, 15, -8, 2, -3, 7, 2, -5, -11, 6, 17, -18, 7, -11, -13, 15, 2, 26, 3, 5, -32, 18, -3, 1, 10, -7, -30, -18, -5, -7, 24, 31, -16, 21, -1, 10, 25, -3, -7, -19, -3, -19, 8, 4, -1, 22, -30, -17, -4, 8, -32, -7, 10, 19, 14, -1, 8, -5, 16, 4, -13, 8, -37, -17, -8, 13, 19, 18, 2, -21, -3, -5, -3, -12, 41, 7, -10, 39, -22, 7, 17, 15, -18, 8, -10, 4, -19, 29, -10, 5, 4, 7, -2, 4, 12, -22, 17, -18, 22, 21, -30, -31, 22, -9, -2, 17, 9, -2, -22, 27, 14, -25, -19, -3, -5, -9, -11, 7, -8, 4, -20, 17, -23, -16, 7, 2, 24, -4, -6, 2, -10, 17, 15, -6, 8, -20, 39, 27, -32, -43, -6, -35, -17, 41, 13, -14, -13, 35, -12, 4, -9, -48, -14, 27, 27, -24, -29, -14, -16, 26, -31, 11, -41, 22, -5, -3, -6, -18, -16, 9, -18, -2, -1, 1, -4, 14, 0, 9, 12, -2, -8, 22, -4, -4, -33, 2, 15, -15, 7, 9, 1, 16, -1, -12, 2, 0, 14, -34, -16, 9, 12, -13, -9, 3, 10, 12, 29, -6, 0, 6, 32, -22, -11, 7, 3, 19, 15, 1, -32, 12, 16, 28, -15, -30, -10, 26, 8, -5, -2, 6, 13, 0, 3, 31, -15, 5, -6, -15, 8, 16, 1, -3, 1, 1, -26, -9, -27, -5, 8, 19, 10, -29, -24, -6, 20, 15, -10, 4, -18, 2, -13, 20, 12, -11, 0, 11, -6, -3, 5, -18, 4, -7, -17, 14, -15, 15, -18, -18, -16, -11, -14, 21, 13, -30, -15, -4, 18, 8, -12, 15, -16, 21, -4, 12, -11, -15, -19, -1, 13, -21, -22, 6, -11, 0, -29, -17, -25, 15, -4, 15, -2, -17, -10, 8, 2, -26, -15, -18, -6, -21, -27, 0, -22, -4, -21, -9, 9, -16, 2, -7, -12, -5, 2, 3, -17, 4, -11, 32, 7, 20, -2, 2, -14, -2, 23, 12, -41, -1, 22, 6, 13, 1, 20, 10, -28, -12, -10, 9, -9, -19, 6, -21, -14, -6, -1, 7, -6, 1, -21, 19, 11, 24, -42, -2, -16, -13, 12, 45, -11, -6, 12, 30, 17, 7, 20, 16, -2, 14, -13, -33, -52, -1, 0, -13, 2, -15, -5, 1, -3, 1, -6, 8, 12, -8, -52, -12, -4, 0, 5, 16, -2, -32, 30, 12, -8, -26, -3, 5, 21, 29, -20, -10, -27, -7, 4, 15, 1, -15, -1, 0, -2, -1, 9, -1, -14, 25, 0, 10, -6, 14, -20, 23, 7, -28, -9, -2, 9, -1, 7, 11, 17, 21, -7, -33, -22, -18, 20, -2, 9, -4, -8, 19, -13, -9, -7, 5, 0, -8, 26, -10, -6, 28, -6, -9, 10, -19, -14, 13, -14, -18, 13, -3, -15, 1, 3, -16, -6, 3, 12, 8, 7, -8, -10, 12, 2, 17, -29, 1, 2, -30, -12, 10, -25, 9, 14, -13, 29, -20, -13, 21, -6, -4, 3, 10, -4, 2, -5, -10, 2, 22, -4, -3, -41, -13, -20, 0, 0, -15, -8, -4, -24, -13, 8, -2, -22, -14, -2, 24, -13, 5, -3, 23, -30, -8, -20, 16, -2, 16, 14, -17, -26, -1, -13, -8, 5, 14, -15, 11, -17, -20, 4, -3, 1, 4, 3, -4, -1, -5, -10, -8, -10, 19, 0, 17, -15, -7, -3, -4, 7, 9, 6, 9, -16, -14, -28, -3, 5, 24, -7, 44, -13, 6, 28, 33, 0, -20, 6, 8, -8, 15, -20, -13, -19, 15, 22, 24, 11, -18, -6, -1, 2, 24, 11, -8, 16, -21, 3, -17, -26, 7, -27, -11, 7, 6, 8, -1, -20, 24, -9, 30, -15, 23, -21, 26, -5, -15, 4, -14, -23, 39, 13, 16, -7, -16, -15, 10, 5, -11, -4, -13, 5, -8, 7, -5, 15, 14, -3, 4, 15, 6, 18, 14, -5, -2, -14, 21, -16, 0, 4, -17, -18, 32, -2, -16, -7, -25, -21, 16, -15, 2, -12, 17, 9, -4, 6, 7, 20, -1, -18, 10, 24, -16, 27, 14, -18, -5, -34, 17, 7, -25, 9, -16, 4, 43, -26, -30, 6, 9, -19, 14, 10, -22, 17, 23, -3, -13, -10, 24, 5, 4, -16, 6, 0, 11, -10, 8, -5, 6, 26, 22, 1, 3, -3, 16, 0, 4, -23, 1, 5, -27, -5, -4, 10, -3, 1, -5, -7, -16, 1, 23, 1, -5, -3, 7, -10, -9, -24, -13, -1, 24, 38, 22, 0, 3, -27, 8, 33, 9, -15, 9, -11, -25, 14, 1, 14, -33, -9, 19, -20, -30, -30, -1, -10, 26, -23, -9, -2, 8, 2, -7, 17, 25, 45, 24, -5, -21, -34, 5, -2, -5, -39, -7, 3, -8, -17, -6, -24, 1, 2, -14, -1, -7, -8, 3, 13, -5, -26, 12, -16, 3, -22, 8, 6, -21, -1, 21, 4, -54, -7, 11, -7, -16, -3, -1, -2, 19, -22, 8, -21, -1, 6, -11, -10, -12, 6, 3, 25, -9, -40, 4, -16, -7, -17, 11, -4, -7, -1, -9, 6, -29, -1, 8, -7, -12, -4, -11, -13, 15, -14, 8, -3, 16, 13, -14, 6, -2, 10, -7, 12, 1, -6, 8, -4, 0, 16, 23, -20, -11, 10, -2, -7, 24, 1, 10, 17, -10, 11, 10, 24, -4, -26, -1, 7, -12, -19, 7, 12, -7, -8, 12, 9, 12, 8, 12, -1, -3, 12, -13, -3, 5, -18, 6, -27, -16, 2, -7, -35, -2, -6, 37, 13, -20, -9, -12, -23, -15, 7, 5, -3, 0, 17, -20, -18, 9, 1, 4, 6, -20, 17, -17, 20, 26, 17, 22, -1, -8, 14, 15, -6, -15, -6, 16, -12, 4, 7, -26, -4, 23, 23, 10, 1, 11, -9, -36, -5, 12, -9, 33, -10, -28, 11, 1, 0, -1, -5, -2, -1, -33, 13, -10, -18, 8, -8, 28, -25, 17, -2, 9, -18, 19, 51, -7, 12, 5, 37, -5, -41, -6, -26, 2, 36, -7, 6, -24, -19, 10, 7, -15, -27, -8, -9, -16, 15, 0, 10, 5, 5, -13, -21, 19, -30, 2, 11, 10, -9, 21, 16, -1, -16, 8, -37, 7, -7, 32, -10, 11, -12, 6, -1, 6, 24, -6, 10, -14, -19, 12, 6, -9, 13, 4, 19, 10, -17, 3, 7, -4, -9, 12, 4, 6, -10, -1, 5, 7, -26, -20, -1, 33, -5, -4, -9, 4, 0, -18, 3, 13, 5, -14, -8, 10, -22, 1, -3, 16, 23, 27, 3, 7, -25, 1, -34, -26, 17, -26, 7, 7, 46, -2, 22, -16, 8, 7, -33, 7, 3, 18, -16, -4, 29, 11, -22, -16, 3, 7, 13, 32, -7, -1, -2, 36, 3, 11, 18, 3, 4, -17, -3, -3, 25, 0, 42, -13, 13, -8, -16, 4, -23, 14, -5, -1, 12, 5, 14, -28, 2, -36, 17, 7, -48, -34, 19, -1, 28, -6, -19, 12, 14, -24, -25, -20, 8, 8, 2, -5, 6, -13, -19, -25, -10, -17, -24, -10, -16, 9, -11, -33, 4, -40, 2, 12, -18, 17, -15, 0, -5, -11, -6, -2, 26, 16, -8, -9, 16, -24, -5, 21, 3, 6, 2, -7, -12, 16, 10, -13, 10, 6, 4, 26, 23, -3, -9, 1, -31, -10, 5, -13, -5, 1, 22, 2, 17, 21, -6, 18, 4, -15, 10, 17, -1, 15, -6, 5, -10, 24, 14, -25, -3, 14, 8, 10, 5, 2, 6, -28, -45, 34, -6, 15, 16, 5, 4, 5, 10, 36, 1, 22, 6, -13, -1, 6, -26, 4, -7, -12, 3, 9, 14, 19, 1, 26, -16, 7, 17, 2, 8, 14, -4, -11, -15, 16, 5, -14, -21, -12, -7, -18, -14, 14, -9, 2, -6, -18, -5, 18, -19, -3, 17, 6, -21, -10, -8, -17, -27, -1, 5, 22, 8, -4, -8, -22, 1, 11, 1, 9, 6, -35, -2, -4, -4, 17, -16, -21, -2, 17, -3, 17, -1, 6, 2, -15, -21, -21, -17, -12, 3, 2, 15, 13, 3, 22, 11, -9, -8, -18, -20, -1, 12, -39, 7, 10, -4, -2, -4, -14, 0, -8, -11, 36, -8, 1, 4, -11, -30, -36, 6, -1, -20, 0, -6, 11}

#define TENSOR_CONV2D_2_KERNEL_0_DEC_BITS {7}

#define TENSOR_CONV2D_2_BIAS_0 {-21, 3, 28, 48, -89, 47, 63, -12, -20, 2, -113, -63, -7, 97, 64, 31, -5, -11, 12, 118, -10, -50, -31, -75, 97}

#define TENSOR_CONV2D_2_BIAS_0_DEC_BITS {7}

#define CONV2D_2_BIAS_LSHIFT {3}

#define CONV2D_2_OUTPUT_RSHIFT {7}

#define TENSOR_CONV2D_3_KERNEL_0 {-7, 3, 28, -29, -12, 0, -48, -46, -17, -39, 57, 27, -17, -35, 38, 0, 4, -28, 9, 9, 4, 11, 6, 13, 16, -5, 37, -12, 32, 25, 3, -28, -18, -35, 25, -13, -7, 4, 9, 29, 40, 2, -4, -6, 5, 34, -14, -45, -39, 5, -20, 10, 19, 2, 69, 8, -67, -39, 24, -12, -6, 30, -22, 16, 9, -18, 39, -9, -17, -13, 3, 22, 22, -51, -23, 14, -5, -5, 6, 48, -1, -14, -21, 7, 29, -7, -24, 4, -12, 20, 22, 9, 15, 3, 40, -2, 25, -19, 9, 53, -21, 1, -55, 15, -36, 30, 41, 2, 4, -21, -2, -27, -36, 1, 11, 11, -18, 51, 59, 25, -24, -51, 0, -24, -32, -33, -2, -22, 5, -41, -16, 8, 0, -29, 37, -29, -11, 29, 73, 7, -61, 51, -12, 35, -21, 23, 30, 20, -46, -17, 34, -12, -9, -3, 36, -25, 7, 9, 32, -58, -36, 29, -23, -43, -5, 26, 3, 32, -5, 21, -75, -7, 3, 59, 14, -7, -6, 41, 27, 16, -5, -3, -10, 16, 22, 20, 19, 3, -11, -9, -22, 13, -78, -32, 24, -45, 8, 35, 28, 20, 26, 2, 41, -5, 29, -49, 5, -6, 0, 49, 12, -23, 14, 18, -3, -13, -1, 9, -2, 54, -69, -5, -15, 5, -37, -20, 30, 8, 11, -6, -15, -30, -9, 2, 38, 13, -1, -22, -11, 32, -13, -26, -35, -3, 4, -10, 13, -30, 21, -4, 8, -14, -6, -2, 16, 1, 25, -33, -24, 21, 6, -54, 9, -52, -27, -5, -34, 5, 38, 20, -42, -29, -18, 38, 2, -20, 65, 3, -8, 30, 37, 24, -4, 12, -52, 8, -42, 10, -13, -12, -26, 20, 3, -38, -23, -12, 1, 40, 54, -40, -2, 39, -9, 0, -1, -15, 38, -9, 26, 44, 1, 39, -26, -23, -30, -16, 29, 26, 25, -29, -7, 5, 8, 13, -29, 6, -14, -1, 39, 17, -45, -10, -42, 26, 15, 28, 6, 41, 62, 6, 12, 12, -4, -18, -22, -5, 7, -8, -21, -18, 35, 72, -23, -22, -28, 18, -25, -1, -13, 69, 5, 21, -49, 27, -30, 22, 58, 28, 35, -13, 27, 17, -9, 11, -44, 17, 36, -17, 49, -4, -59, -17, 26, -24, -15, 22, -17, 0, -27, -11, -6, 17, 39, 18, 23, 7, 22, 6, -37, 15, 35, 8, 60, 13, 10, -6, -35, -38, 13, -3, -33, 32, 19, -15, 10, 18, 24, 6, 3, 34, -17, -2, -31, 4, 33, 20, 32, 16, -1, 35, 29, 6, -25, 14, 29, -31, 41, -22, 0, 2, -34, 37, 9, -6, 29, 4, 30, 4, 24, -45, -3, -8, 49, 29, 5, 8, -24, -18, 1, -1, -14, -10, 34, -5, -10, -25, 12, -1, -21, 11, 7, -27, 0, -17, 9, 15, 0, 17, 7, -4, -1, 30, 2, 39, 24, -15, 7, -6, 8, 15, -53, 3, 19, -29, 11, -8, 39, -11, 17, -39, -1, 4, 53, 5, 22, -17, 17, -12, 2, -11, 33, 7, -24, -53, 18, -10, 19, -32, 12, -13, -3, -31, 13, -9, 50, -5, 14, 16, 24, -17, -27, 10, 2, -18, 16, 5, -3, -33, -3, -17, 0, 12, 27, 7, -27, 33, -54, -10, 6, 3, 6, -22, 37, -6, -9, 17, -13, -16, 2, -20, 2, 20, -39, -37, 16, 10, 13, 4, 7, 22, 7, -19, -7, -33, 39, -35, 29, 9, -19, -9, 15, -8, -15, 0, -33, -2, -8, -20, -38, -1, -9, -9, -10, 28, -24, -9, -36, 16, 8, -11, 6, 3, 23, -41, -40, 16, -37, -12, -23, -26, 0, 32, 14, -16, 31, 30, -59, -22, 50, 17, 20, -18, 11, -21, -7, 8, 3, -4, -28, -47, 7, -38, 53, 1, 0, -4, 16, -30, 12, -19, -5, 18, 11, 38, 40, -12, -13, 23, -55, -11, -16, -9, 30, 9, -46, 48, -10, 9, -29, -16, 20, 14, -4, -17, 21, 22, -35, -25, 18, -10, -1, 48, -13, 6, 4, 15, 41, -21, 25, -16, -4, 8, 20, 10, 9, -8, -21, -17, 15, 9, 14, 49, -1, 6, 10, 33, -2, 3, -33, -27, -11, -11, 41, 73, 11, -33, -6, -8, 43, 37, -30, -37, 18, 44, 4, 18, -13, -32, 39, -50, 18, -8, 48, -3, 45, -22, -16, 42, 66, -21, -11, -9, -22, 49, 24, -6, 3, 0, -44, 9, -8, -40, 9, -5, 3, 56, -12, 16, 43, -53, -21, 36, 31, 3, 50, -40, -14, -17, 64, 68, -3, 42, -58, -15, 5, -1, -36, -2, 27, -35, 21, -43, 49, -56, 2, 9, 21, 0, -32, 17, 16, -18, 6, 16, 21, 6, -3, -34, 4, 4, -6, -54, 19, 20, -24, 6, -31, 6, 9, -10, 70, 6, 10, -27, 32, -29, 3, 58, 32, -28, -16, 28, 3, 30, -26, -2, 13, 9, -2, -32, 21, -6, 15, 6, 39, 4, -13, 58, 18, 6, -7, -33, -1, 24, 13, 28, 43, -21, -37, -32, 0, -9, 6, 8, 24, 2, -22, 8, 6, -15, 35, -8, -32, -30, -1, -8, -12, -18, 10, -22, 31, -15, -46, 36, 15, 13, 9, 1, -20, 0, 13, -11, -54, -2, 0, 12, -42, 53, 28, 33, -32, 4, -6, 7, -7, -13, 19, -60, -22, -10, 15, -9, -13, 17, -6, 29, -9, 54, 29, 24, -37, 4, -19, 9, -41, -41, 35, 31, -61, -17, 37, 17, 36, 5, 19, -29, -21, 19, -41, 44, -6, -27, 1, 12, -34, 19, -4, 16, 10, -24, -46, 0, 9, -6, 26, 39, -34, 35, 61, 31, 50, -19, -30, -11, -1, -26, -9, -13, -23, -12, -4, 12, 3, -8, -27, -2, -5, -4, -7, 6, -25, -1, -1, 23, -6, -6, 13, -23, 13, 26, -5, -20, -11, -20, 27, -22, 15, 13, 36, -8, -16, 12, -17, -19, 37, -13, 10, 52, -7, -22, 2, 29, -5, 11, 44, -28, -38, -15, -10, -10, 11, -46, -9, 14, -19, -13, 18, -10, 20, -31, -13, -36, -12, 39, 14, 1, -22, -12, 9, 2, 12, 54, -26, -29, -18, 18, -11, 39, 40, 48, 5, -27, 23, -11, 1, 8, -26, -13, 29, -46, 2, 17, -21, -22, -2, 4, 31, -17, 5, -4, -2, -9, 1, 5, -17, -5, -4, 21, 28, -3, 21, 10, -23, 49, -8, 30, -12, 4, 3, -7, -32, 14, 21, -27, -52, 4, -17, 24, 41, -9, -25, -26, -10, -9, -28, -35, -36, -33, 59, 6, 30, 5, -19, 15, 32, -7, -5, -1, 28, 46, 12, 25, -23, -23, 22, -4, 9, -8, -32, 3, 25, -21, 22, -6, -15, -58, 3, 19, -41, 10, -14, 28, -7, 20, 10, 16, -14, 2, -23, 31, 38, -34, 23, 36, -8, 11, 20, 18, -23, -30, 0, 12, -35, -17, -15, -7, -9, -4, 19, -13, -19, -10, 3, -26, -16, 28, 19, -1, 9, -10, -2, -28, -32, 12, -12, 7, 7, -20, -18, -13, 26, -4, 57, 18, 36, -9, 3, -15, 41, -24, -6, 33, -1, 19, 15, -3, -17, 2, -19, -20, -5, -15, -22, -38, 1, -13, -11, -9, -6, -11, 3, 13, 25, -1, 15, -29, 10, -29, 27, -26, -33, -25, 0, -12, 64, 34, -18, -29, -22, 44, 3, 8, -17, 18, 2, 4, 1, -29, -13, -4, -8, 19, 9, -8, -10, -64, -1, 2, -18, -3, 22, 14, -29, -41, 69, -37, 18, -31, -4, 36, 24, 37, -62, -1, -2, -31, 27, 41, 2, -23, -11, 18, 5, 27, 11, -32, 23, -13, 12, 16, 20, 16, -28, 17, 28, -9, 31, -15, -35, 28, 1, 15, 4, 23, -1, 30, -10, 28, 11, 27, 34, -26, 2, -5, 22, -33, 12, -41, 40, 27, 14, -16, -12, -5, -43, -2, 13, 26, -31, 16, 0, -51, 32, 22, 35, 40, -30, -21, -3, -5, 12, 48, -59, -13, 29, -14, -39, 22, 29, -17, -44, -15, 4, 34, -2, -22, 7, -30, 17, 6, 57, 71, -8, 13, -9, 3, 16, -18, 24, -15, 26, -8, 13, 15, 22, -33, 43, -1, -9, 41, -33, -41, -21, -2, 11, -23, 0, 39, -8, -10, 12, 6, -13, -42, 4, 8, -42, -7, 36, 53, -34, 24, -26, 11, -11, -21, 0, -46, 8, -37, -3, 36, 7, 2, -56, -9, -10, 28, 30, 19, 26, -58, -15, 28, 28, -12, -6, 42, -12, 22, -11, -36, 23, -1, 33, -14, -19, -1, -14, 5, 36, -60, -51, -45, 41, -16, 39, 21, -6, 32, 35, 43, -48, -18, -21, -16, 21, 5, 48, -23, -6, 31, -9, -21, 0, 25, 33, 9, -30, -18, 8, -11, 38, 14, 1, -23, -8, 50, -51, 45, 35, -36, 34, 9, 9, 6, -90, 16, 34, -1, -27, -36, -21, -20, 14, 27, -5, 23, -51, 23, -3, -30, 29, 17, 21, 55, 22, 65, 52, 28, 39, 1, 5, -6, 5, -36, 34, 35, 26, 14, 2, -5, 21, 2, -25, 40, -24, 25, 15, 52, 38, -21, 9, 12, 8, -23, -2, 57, -24, -2, -28, -25, -29, 30, -40, 56, -15, 19, -3, -38, 3, 42, -30, 42, 9, 4, 12, 11, -15, -35, -42, 17, 2, 5, -21, 44, 6, -31, -17, 6, -42, 24, 12, -11, -31, 17, 19, -13, 10, 36, 35, 1, 9, -9, 24, 23, -21, 13, -14, -13, -51, -8, -29, 4, -38, 20, 8, 6, 17, -14, -45, 8, -13, -29, 16, 28, -55, -28, 20, 31, 23, -31, 32, 15, -7, -2, 17, -10, -52, -15, 28, 29, -32, -41, 12, 7, -71, -21, -11, 31, -8, -5, -3, 70, -30, 42, 0, -11, 34, -17, 10, -47, 30, -20, -2, 23, 7, -52, 17, 40, -18, -64, -40, 26, 3, 3, 28, -32, -4, 6, -14, -27, 1, -26, 47, 10, -13, 18, -42, -6, 13, 52, -70, 18, 43, -6, -74, 53, 8, 3, -8, 17, -11, 86, -16, 24, 17, 18, 22, 10, -6, 2, 15, -23, -34, 23, 37, -21, 21, -7, 3, -21, -14, 83, 0, -7, 44, 0, 22, -16, 16, 16, 44, 14, 20, 28, 9, -8, -59, 40, -19, 6, 28, 40, 23, -3, -63, -45, 8, -1, -76, 55, -77, -23, -34, 46, -6, 39, -1, 90, -31, -10, -2, 30, -16, 8, 26, -28, 29, 0, -55, -33, -3, 31, 13, -8, -31, -30, -24, 39, -14, 43, -4, -11, 34, 49, 13, 7, 10, -19, -9, -8, 5, -24, 13, -23, -16, -28, -16, 4, -56, 38, -2, -39, 24, 14, 4, -16, 7, 47, -6, -9, -27, 18, -39, -23, -7, 3, 57, 40, -15, 12, 13, 23, -28, -27, -55, 44, 21, 28, -18, 9, -30, 24, 5, 57, 33, -43, 8, 9, 10, 22, 20, 74, 8, -39, 1, -4, -16, 49, -8, -8, 22, -35, 76, 2, 12, 9, 18, 41, -6, 47, -2, -21, -44, -63, -12, 5, 0, -12, 7, 31, 26, 24, -12, -42, 0, 17, 16, -25, 9, -65, 11, -9, -40, 29, 37, -93, 27, -38, 3, -15, -22, -18, 5, -38, -11, -22, 6, 17, 21, 21, -29, -26, 19, 24, 62, -3, -22, -28, 19, -25, 14, -27, 3, 12, -62, -44, 11, 16, -11, 15, 4, -13, 7, -46, -12, 10, 33, -12, 7, -13, 8, -8, 18, 49, -16, -27, -21, 3, -13, -27, 19, 37, -21, 0, -16, -24, -33, -22, -21, -55, 36, 45, 9, -14, -10, 5, 18, 10, -27, 15, 37, -2, 20, -26, 13, 1, 28, -18, -7, -25, 32, 35, -4, -29, -40, 19, -8, 37, 36, -30, -7, 23, -8, -44, -25, -23, -41, -15, 21, -1, -5, 9, 15, -26, 37, -56, -14, -45, 72, -4, 11, -4, 30, -5, -20, 39, -34, 19, -15, 46, -58, 30, 9, 11, 24, 40, -11, -2, -19, 3, 14, 13, 10, -16, -5, 0, -43, 6, -33, -58, -60, 35, -21, -15, -30, -53, 16, 21, -21, -68, 36, 41, 29, 48, 0, 24, 20, 5, -59, -32, 42, 32, -51, -42, 11, 14, -8, -40, 19, 38, -63, 8, -71, 16, 45, -15, 30, -8, -1, 85, -21, 11, 16, 10, -5, 3, 49, -8, -28, -9, 36, -38, 5, 14, -48, -23, 9, 4, -3, -63, 34, 23, 43, 9, 24, 18, -8, 18, -57, -55, -11, -9, -35, -43, -29, -36, 38, 2, 12, 10, -25, -53, 39, 29, 51, 17, 27, 36, 77, 47, -34, 47, 15, -14, 17, 33, -31, 22, -82, 34, 28, -68, 21, 24, -3, 15, 25, -13, -7, -30, -28, -12, 43, 42, 26, -25, -44, 14, 12, 14, -8, 0, 26, -18, -10, -17, -19, 43, -15, 19, 18, -11, 19, -17, -29, 35, 9, -21, 12, -18, -26, -16, 25, 1, -9, -3, -61, 3, 5, -28, 34, 34, -2, 46, -25, 61, 50, 20, 14, 34, -3, 36, 3, 1, 36, -4, -21, 14, 62, 48, -7, -22, 44, -50, -12, -5, -56, 52, -15, -5, -31, 6, 8, 31, 4, 61, -12, -52, -17, 18, -1, -22, 14, -19, -37, -2, 0, -13, -6, -23, -12, 3, -27, 15, -64, 0, -45, -16, 36, -1, 23, 9, 1, 4, 19, 11, 39, 6, 19, -11, 20, 1, -24, 16, 18, -30, 10, -10, -35, -12, 5, -25, -24, 30, 20, 27, 11, -9, -8, -11, 3, 6, 7, 18, -14, 16, -26, -7, -18, -19, 14, -14, 11, 10, 34, 19, -3, 10, 40, -45, 6, -19, 19, -12, -4, -32, 9, 5, 6, 4, 28, -65, 3, -8, 9, -6, -26, 41, -28, -15, -38, 23, -5, 1, 42, 6, -20, 14, -23, -16, -30, 9, 3, -3, 18, -14, -26, 18, -27, 65, -39, -38, -8, -28, 7, -32, 21, -11, -2, 1, 45, 72, 52, 12, -5, 1, 36, -8, -1, -3, 24, -38, 19, 13, -45, -32, 18, -13, 9, 19, 21, -35, -8, -43, 49, -10, 9, 6, -2, -17, -7, -3, -2, 20, -8, 63, -36, -17, 26, -8, 6, 8, -2, -32, -37, -22, -53, -7, -61, -10, -9, -10, -12, 17, 17, -22, -18, 18, 19, -2, -28, 30, 30, 32, -33, -65, -1, -27, -47, -6, -12, -9, 36, 11, -21, 56, 8, 3, 6, 9, -2, 78, 3, 6, -52, 4, 9, 97, -10, 4, 2, -1, 4, -58, 15, 1, -1, 17, -28, 69, -9, -46, 6, 59, 59, 17, 38, 26, 4, -38, 62, -39, 80, 59, -7, -21, -64, 10, -45, 72, 15, -36, -44, 13, 31, -53, -45, -37, 17, -7, 3, 0, 67, -35, -4, 42, -14, 27, -3, 10, 2, 3, -33, 16, -6, 33, 35, 1, 40, 11, -20, -67, 1, 51, 2, -22, -19, 8, -7, -5, 19, -3, 14, 7, 6, -1, -59, 29, 18, 8, 33, 43, 43, 0, 2, -3, -35, 19, 21, -48, 19, 34, 13, 10, -24, -11, -22, 36, 25, -1, 8, 36, 3, 7, 31, 26, 20, 9, 57, -7, 10, -45, 39, -2, 10, -58, -41, -10, 44, 1, 1, -45, 30, -4, -8, -22, 27, -14, 34, -59, -30, 13, -13, 33, 55, -4, 37, 22, -8, 12, -39, -1, -8, -9, 47, -11, 11, -12, -4, 18, 49, 14, -32, 13, -12, -22, -15, -14, 28, -34, 25, -18, -3, 20, -54, -59, -44, -10, 57, 2, 0, -49, -8, 40, -2, -58, 4, 27, 43, -10, -59, 26, 6, 36, 19, 12, 1, 14, -12, 1, -50, 21, 0, -38, 9, -15, 1, -30, 0, 26, -8, 18, 0, 5, -39, -15, -6, -18, -45, 20, 9, -44, 1, 8, 59, -1, -2, 22, -18, 7, 20, 38, 22, 70, -15, -13, -34, -1, -6, -31, -26, -16, 10, 84, -5, -2, 11, 23, -59, -26, -11, 12, -22, -5, -34, 45, 60, -31, 0, 9, -29, 29, -14, -11, 10, -43, 1, -20, -38, 6, -32, -67, -10, -4, 48, -25, -12, -8, 18, 20, -2, -31, 82, 13, 21, 10, -12, 8, 9, -13, -14, 33, -7, -30, 16, 0, -9, 11, -24, -10, -66, 4, -29, 2, 0, 31, 29, 53, 57, -28, 5, -18, 25, -28, 17, 42, 17, 44, 48, 30, -37, -55, -10, -28, -9, 3, -35, -20, 21, -18, -36, -5, 57, 7, 12, -3, 17, 6, -3, -27, -3, 51, 20, 11, -33, 16, 9, 26, -32, 11, -32, -46, -5, 7, -6, 11, -22, -20, 20, 0, -53, 1, 35, 3, -29, 3, 58, 14, 16, -33, -7, -11, -37, -6, 7, -23, 24, 11, 17, 43, -60, 36, 8, 34, 61, 25, -27, 6, -59, -27, -63, 26, -53, 3, 36, 37, 5, -8, 3, -9, 8, 46, -13, 51, -7, 22, -31, -50, 21, -36, 5, 10, 2, 54, -27, 37, -1, -32, 18, -9, -35, -2, -1, -24, 31, -17, -6, -45, 11, -21, 4, -39, 25, -20, 27, 15, 53, 35, 51, 25, 30, -21, 20, 12, -36, 27, 27, 20, -17, -22, 59, -1, 28, 1, 0, 54, 40, -1, -13, -19, -1, -31, -48, 13, 36, -4, -9, -2, -2, -28, -20, -5, 4, -26, 36, -1, -16, 1, -3, 18, -20, -62, -6, -22, -26, 21, 89, 32, 15, -8, 64, -33, 23, -7, -42, 16, 30, -9, -5, -20, 52, -16, 67, -6, -2, 59, 58, -27, -91, 51, 50, -34, -37, 55, 30, -12, 27, -18, 19, -20, -23, -17, 53, 55, 64, -23, -9, -8, 82, 18, -18, -8, -19, -7, 1, 29, -41, 7, -1, -22, -21, 8, 7, 11, -11, -55, 29, 14, -21, -13, -35, -58, -21, 26, 0, 13, 19, 34, 31, -21, 33, -1, -53, 22, -33, 4, -23, 0, 16, -15, -9, 0, 30, 20, 16, -3, -12, 4, 53, 5, -27, 12, 20, -14, 51, -13, -34, 36, 5, -30, -46, -10, 6, 16, -32, -31, 48, -4, -56, 50, -17, -2, 7, 38, -17, 5, 21, 37, 26, -49, 33, 0, -38, -4, -33, 18, 14, 17}

#define TENSOR_CONV2D_3_KERNEL_0_DEC_BITS {7}

#define TENSOR_CONV2D_3_BIAS_0 {-21, -31, 3, -53, -35, 13, -16, -44, -47, 0, 0, 26, -45, -10, -55, 4, -28, -10, -7, 35, -17, -22, 11, -9, -107, 24, -34, -16, -91, -21}

#define TENSOR_CONV2D_3_BIAS_0_DEC_BITS {6}

#define CONV2D_3_BIAS_LSHIFT {4}

#define CONV2D_3_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {-20, 20, -60, -80, 25, -52, -28, 1, 63, -2, 12, 4, -6, -8, 25, 14, -41, -33, 7, 0, 37, -33, -13, 2, 6, -42, -35, -21, 13, -42, 11, -59, -36, -32, 28, 34, 19, 13, -79, 17, -28, 16, -40, 27, -52, 58, -46, 0, -37, 18, 16, -9, -55, 0, -56, 6, -39, 35, -55, -10, -25, 21, -9, 35, -42, -42, 11, 53, 39, -22, 29, -13, 3, 15, -30, 39, 19, -36, 33, 7, 39, -56, 4, -53, -43, -33, -29, -12, -23, -24, 24, 39, 36, -39, 9, -24, -20, 34, 9, 27, -61, 39, -52, 74, -46, -77, -18, -41, -23, 43, -2, 2, 75, -5, 20, 25, -73, -19, -9, 50, -25, -72, 21, 12, -6, 1, 64, -8, -1, -2, 7, -26, -1, -15, -20, -20, -2, -18, 15, -26, -2, 26, 19, -12, -33, -27, -62, 8, 36, -1, 8, -19, -41, 17, 45, -9, -24, -51, -38, -18, -15, 34, -57, -7, 6, -11, 18, 17, -17, -21, -6, -19, -20, -30, -28, 19, 0, 17, -33, 2, 8, -10, 19, -28, 40, -25, -7, 0, -64, -12, -26, 9, 42, -2, 12, -18, 10, 0, 56, -6, 41, 18, 32, -2, -13, 10, 3, 8, -21, 17, 25, -22, 21, -8, -8, -9, -33, 19, -40, -16, 17, 0, -4, 18, 33, 43, -8, -38, -56, 1, -30, 7, -8, 30, -4, -10, -40, -26, -9, 8, -44, -26, -16, -82, 14, -87, -24, 3, 34, -15, -6, -15, 29, 4, 37, 18, -18, -12, 33, 39, 14, -57, -54, -6, -4, -50, -28, -6, 56, -41, 26, -33, -44, -16, 5, 19, 8, 7, -41, 16, -21, 21, -25, 22, -27, 8, -48, -44, -46, 20, 19, -7, -69, 21, -57, 30, -30, -13, -28, 27, 24, -1, -4, 61, -38, -12, 21, 32, 1, -15, 26, 1, 24, 23, -74, 33, -6, -21, 44, 29, 19, -38, -16, -39, -16, -37, -19, -17, -17, -3, -16, 34, 31, -32, 6, -25, -12, 18, -29, 29, -29, 16, -67, 63, -23, -45, -22, -39, -37, 53, 52, 30, 89, 5, -32, 13, -72, -19, -29, 25, -21, -57, 7, 13, -8, -2, 15, -5, -2, -8, 34, -14, 6, -34, -29, -33, 11, -25, 12, -14, 16, 27, 26, -11, 15, 18, -84, 14, 48, 14, -8, -19, -26, 19, 35, 24, -11, -41, -3, -8, 13, 40, -48, 3, 9, -2, 12, 2, -21, -4, 13, -34, 14, -7, -20, -22, 5, 14, -21, -4, -8, 5, 26, -25, 33, 6, 3, -18, -45, 10, 0, 13, 25, -13, 3, -6, 5, 19, 46, -26, 28, -21, 50, -8, -44, 20, -19, -9, -23, -13, 13, -31, -29, -6, -7, -3, -32, 34, -27, -3, 27, 4, 11, 1, 45, 12, 30, -36, -31, -1, -16, 25, -5, 15, 22, -5, -36, -24, 15, 22, -39, -28, -22, 0, 5, 2, 56, -9, 22, -34, -8, -19, -5, -19, 21, 6, 0, 19, -46, -49, 11, 36, 4, -45, -16, -3, 73, 58, -15, -19, -23, 33, 15, -52, -1, -64, 26, 33, -31, 2, -38, -35, -55, 32, -58, -61, 16, 7, -33, -29, -1, 47, 28, -22, -33, -62, 18, 12, 46, 4, -50, -24, 19, -13, -45, -35, 41, -70, 14, 82, -64, -13, -14, -39, -15, -5, 67, 41, -14, 20, 25, 77, -30, -8, -28, -37, 32, -17, -23, -29, 11, 44, -1, -3, -28, -54, -62, 48, -21, -18, -64, -72, -31, -10, -66, -35, -36, -32, -4, -24, 64, -14, 35, -29, -8, -17, -42, -38, 22, -32, -63, -13, 12, -7, -7, 25, -53, 1, 29, 37, -8, 0, -28, -33, -7, -19, -19, 20, 3, -3, -9, -22, -35, 28, -56, -78, 69, -4, -16, 12, 16, 9, -18, -13, -36, -26, -45, 8, -19, -35, 2, -72, -19, 7, 44, -14, 27, 1, 20, 25, 14, -32, 19, -24, 15, -7, -15, -26, -10, 16, -6, 11, 7, -2, 16, 34, -12, 6, -9, -26, -12, -10, -24, -12, 20, 12, 2, -2, -18, -38, -25, -33, 32, -26, -15, -11, -7, 9, 13, 7, -3, 21, -2, 16, -18, -8, -10, -13, -24, -8, -5, -24, 3, 17, 3, -3, -21, 44, 3, 8, 32, 39, 21, -11, 18, -3, -3, -8, -19, -27, -18, -5, 7, 23, -28, 14, 41, -36, 6, -28, -17, -24, 63, 4, 11, 35, -5, 22, -13, -30, 10, 22, -37, -55, -23, -28, 54, 33, -11, 17, -43, 32, -4, -57, -2, -74, 34, 1, -24, 6, -9, -22, -41, 17, -3, -47, -8, -12, -8, 0, 16, 55, 9, 4, -50, -50, 34, 28, 6, 0, -46, 2, -31, -8, -30, -20, 18, -80, -12, 53, -24, 9, -19, -37, -48, -16, 45, 18, 38, -11, 13, 98, -46, 1, 5, -11, 49, 12, -29, -30, 11, 29, -2, -16, -47, -84, -31, 42, -77, -6, -17, -28, -16, -8, -40, -13, -20, -8, 8, 0, 53, 22, 44, -25, 11, -3, -44, -38, 12, -38, -42, -11, 29, -3, -28, 22, -55, -17, 32, -2, -24, 4, -4, 2, -23, -18, 27, 27, 1, -1, -22, -24, -13, 19, -21, -45, 75, -29, -30, 19, 32, -5, -15, 19, -1, -1, -10, 28, -31, -18, 7, -42, -26, -23, -5, -22, 18, 11, -17, -1, 42, -7, 17, 22, 12, 12, -16, 3, -6, -7, -41, -11, -23, 6, -25, 17, -14, 30, -40, -33, 7, -9, -7, 14, 10, 27, 12, -13, -7, -39, -3, -22, 27, -35, 6, 12, -22, 0, 26, 42, 6, 6, -22, -30, -2, -21, -10, -11, -38, 14, -5, -18, 1, 39, -31, -23, 6, 3, 16, -8, 18, 31, 36, 5, -10, -9, -16, -17, -5, -44, 33, -60, 13, 36, -45, -25, -40, -32, -13, 30, -26, 7, -101, -13, 8, 39, 28, -48, 47, 16, -5, 29, -5, -3, -29, 13, -27, -37, -19, 56, -7, 10, 29, 6, -19, 14, 39, -9, -13, -30, -41, -31, -37, 4, -9, -6, -18, -12, -30, -52, 4, 0, -13, 28, -21, 31, 5, 22, -27, -18, 3, -54, -18, 47, -20, -18, -49, -8, 7, 8, -10, -4, -53, -7, 13, 31, 20, -30, 41, 44, -14, 56, -45, -15, -5, -16, -53, 30, -29, 49, -28, 17, 15, 31, -14, 20, 31, -5, -1, -6, -8, 2, -26, -14, -12, -19, -18, -9, -7, -47, 11, 3, -18, -5, -17, 22, -13, 4, 0, -42, 3, -7, -65, -21, -72, -22, -12, -12, -14, 14, 8, 2, 29, -10, -45, -20, -11, -39, -50, 1, -18, 7, -9, 7, 24, -42, 30, 17, -34, 63, -42, 20, 10, -19, 1, -37, -13, 63, -8, 35, 9, -15, -17, 17, 22, -6, 15, 9, -8, 54, 8, -40, 6, 39, -29, -19, 58, -18, -28, 10, -23, 17, -77, -42, -48, -17, -1, 4, 12, 1, 21, 34, 23, -34, -42, 39, -21, -33, -26, 27, -10, 16, -8, 6, 36, -11, 18, 7, -20, 38, -28, -14, -23, -18, 11, -29, 11, 39, 2, 26, 32, -8, -4, 1, 40, 21, 17, 5, -9, 8, 7, -32, 14, 75, -47, -15, 11, -16, -15, 21, 28, -19, 22, -40, 26, 27, 33, -20, -10, -21, 17, 55, 14, 30, 18, -29, -5, -44, -15, 15, -12, -5, 14, 0, 4, 54, 5, -25, 19, 11, 25, -29, 1, -3, 28, 29, -28, -22, 11, 18, -1, 33, 1, 11, 14, -12, -20, 23, -19, -21, -18, 26, 14, 2, -14, -4, 4, -20, -12, -16, 0, -2, 16, -31, 7, 31, 22, -14, 17, -5, -8, 37, 11, 36, 13, -24, -1, -25, -8, 25, 3, -16, 27, -14, 18, 51, -13, -22, 2, 15, 32, -10, -16, -4, 14, 20, -10, 1, -21, 28, 0, 24, -5, 35, -5, -1, -19, 20, -12, -21, -5, 16, 44, 1, -16, 10, 3, -3, 15, -9}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_BIAS_0 {-34, 1, -15, 19, 14, -16, -39, -54, -28, -36, 64}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {8}

#define DENSE_BIAS_LSHIFT {2}

#define DENSE_OUTPUT_RSHIFT {8}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define CONV2D_OUTPUT_DEC 3
#define CONV2D_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_OUTPUT_DEC 3
#define LEAKY_RE_LU_OUTPUT_OFFSET 0
#define MAX_POOLING2D_OUTPUT_DEC 3
#define MAX_POOLING2D_OUTPUT_OFFSET 0
#define CONV2D_1_OUTPUT_DEC 3
#define CONV2D_1_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_1_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_1_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_1_OUTPUT_DEC 3
#define LEAKY_RE_LU_1_OUTPUT_OFFSET 0
#define MAX_POOLING2D_1_OUTPUT_DEC 3
#define MAX_POOLING2D_1_OUTPUT_OFFSET 0
#define CONV2D_2_OUTPUT_DEC 3
#define CONV2D_2_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_2_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_2_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_2_OUTPUT_DEC 3
#define LEAKY_RE_LU_2_OUTPUT_OFFSET 0
#define MAX_POOLING2D_2_OUTPUT_DEC 3
#define MAX_POOLING2D_2_OUTPUT_OFFSET 0
#define CONV2D_3_OUTPUT_DEC 3
#define CONV2D_3_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_3_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_3_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_3_OUTPUT_DEC 3
#define LEAKY_RE_LU_3_OUTPUT_OFFSET 0
#define MAX_POOLING2D_3_OUTPUT_DEC 3
#define MAX_POOLING2D_3_OUTPUT_OFFSET 0
#define FLATTEN_OUTPUT_DEC 3
#define FLATTEN_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 2
#define DENSE_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[744] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {62, 12, 1};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_conv2d_kernel_0_data[] = TENSOR_CONV2D_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_kernel_0_dim[] = {8, 5, 1, 8};
const nnom_qformat_param_t tensor_conv2d_kernel_0_dec[] = TENSOR_CONV2D_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_kernel_0 = {
    .p_data = (void*)tensor_conv2d_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_bias_0_data[] = TENSOR_CONV2D_BIAS_0;

const nnom_shape_data_t tensor_conv2d_bias_0_dim[] = {8};
const nnom_qformat_param_t tensor_conv2d_bias_0_dec[] = TENSOR_CONV2D_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_bias_0 = {
    .p_data = (void*)tensor_conv2d_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_output_shift[] = CONV2D_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_bias_shift[] = CONV2D_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_config = {
    .super = {.name = "conv2d"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_bias_shift, 
    .filter_size = 8,
    .kernel_size = {8, 5},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_config = {
    .super = {.name = "max_pooling2d"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_1_kernel_0_data[] = TENSOR_CONV2D_1_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_1_kernel_0_dim[] = {4, 3, 8, 16};
const nnom_qformat_param_t tensor_conv2d_1_kernel_0_dec[] = TENSOR_CONV2D_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_1_kernel_0 = {
    .p_data = (void*)tensor_conv2d_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_1_bias_0_data[] = TENSOR_CONV2D_1_BIAS_0;

const nnom_shape_data_t tensor_conv2d_1_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv2d_1_bias_0_dec[] = TENSOR_CONV2D_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_1_bias_0 = {
    .p_data = (void*)tensor_conv2d_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_1_output_shift[] = CONV2D_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_1_bias_shift[] = CONV2D_1_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_1_config = {
    .super = {.name = "conv2d_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_1_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_1_bias_shift, 
    .filter_size = 16,
    .kernel_size = {4, 3},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_1_config = {
    .super = {.name = "max_pooling2d_1"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_2_kernel_0_data[] = TENSOR_CONV2D_2_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_2_kernel_0_dim[] = {3, 2, 16, 25};
const nnom_qformat_param_t tensor_conv2d_2_kernel_0_dec[] = TENSOR_CONV2D_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_2_kernel_0 = {
    .p_data = (void*)tensor_conv2d_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_2_bias_0_data[] = TENSOR_CONV2D_2_BIAS_0;

const nnom_shape_data_t tensor_conv2d_2_bias_0_dim[] = {25};
const nnom_qformat_param_t tensor_conv2d_2_bias_0_dec[] = TENSOR_CONV2D_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_2_bias_0 = {
    .p_data = (void*)tensor_conv2d_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_2_output_shift[] = CONV2D_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_2_bias_shift[] = CONV2D_2_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_2_config = {
    .super = {.name = "conv2d_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_2_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_2_bias_shift, 
    .filter_size = 25,
    .kernel_size = {3, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_2_config = {
    .super = {.name = "max_pooling2d_2"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_3_kernel_0_data[] = TENSOR_CONV2D_3_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_3_kernel_0_dim[] = {2, 2, 25, 30};
const nnom_qformat_param_t tensor_conv2d_3_kernel_0_dec[] = TENSOR_CONV2D_3_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_3_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_3_kernel_0 = {
    .p_data = (void*)tensor_conv2d_3_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_3_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_3_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_3_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_3_bias_0_data[] = TENSOR_CONV2D_3_BIAS_0;

const nnom_shape_data_t tensor_conv2d_3_bias_0_dim[] = {30};
const nnom_qformat_param_t tensor_conv2d_3_bias_0_dec[] = TENSOR_CONV2D_3_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_3_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_3_bias_0 = {
    .p_data = (void*)tensor_conv2d_3_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_3_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_3_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_3_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_3_output_shift[] = CONV2D_3_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_3_bias_shift[] = CONV2D_3_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_3_config = {
    .super = {.name = "conv2d_3"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_3_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_3_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_3_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_3_bias_shift, 
    .filter_size = 30,
    .kernel_size = {2, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_3_config = {
    .super = {.name = "max_pooling2d_3"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 2},
    .stride_size = {2, 2},
    .num_dim = 2
};

const nnom_flatten_config_t flatten_config = {
    .super = {.name = "flatten"}
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {120, 11};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {11};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[11] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {11};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[17];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(conv2d_s(&conv2d_config), layer[0]);
	layer[2] = model.active(act_leaky_relu(0.100000f), layer[1]);
	layer[3] = model.hook(maxpool_s(&max_pooling2d_config), layer[2]);
	layer[4] = model.hook(conv2d_s(&conv2d_1_config), layer[3]);
	layer[5] = model.active(act_leaky_relu(0.100000f), layer[4]);
	layer[6] = model.hook(maxpool_s(&max_pooling2d_1_config), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_2_config), layer[6]);
	layer[8] = model.active(act_leaky_relu(0.100000f), layer[7]);
	layer[9] = model.hook(maxpool_s(&max_pooling2d_2_config), layer[8]);
	layer[10] = model.hook(conv2d_s(&conv2d_3_config), layer[9]);
	layer[11] = model.active(act_leaky_relu(0.100000f), layer[10]);
	layer[12] = model.hook(maxpool_s(&max_pooling2d_3_config), layer[11]);
	layer[13] = model.hook(flatten_s(&flatten_config), layer[12]);
	layer[14] = model.hook(dense_s(&dense_config), layer[13]);
	layer[15] = model.hook(softmax_s(&softmax_config), layer[14]);
	layer[16] = model.hook(output_s(&output0_config), layer[15]);
	model_compile(&model, layer[0], layer[16]);
	return &model;
}
