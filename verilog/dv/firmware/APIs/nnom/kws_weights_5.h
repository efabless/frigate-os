#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_KERNEL_0 {-51, -36, 9, 35, -11, -85, -4, 37, 8, -3, -94, 32, 60, -61, 16, -42, 59, 36, -74, 20, -16, 43, 18, -69, -13, 24, 23, 2, -48, -6, 32, 24, 21, -18, -18, 49, 2, 28, -38, 4, 15, -58, -15, 61, -22, 20, -36, -8, 78, -34, 43, -30, -41, 42, 15, 45, -26, -19, 13, 35, 49, 24, 9, 4, 42, 29, 11, 10, -6, 29, 9, 10, -19, -23, 2, 30, 0, -5, 17, 55, 9, -20, 4, -60, -58, -31, -69, 14, 46, -63, 28, -9, -35, -90, -79, 13, 57, 65, 28, -28, 9, -13, 8, -24, 44, 35, 12, 14, -51, -30, 35, 44, 58, 57, 42, 58, 34, -61, 8, 70, -17, 77, 12, -7, -8, -21, -32, -19, -11, 53, -61, -14, 21, 20, 127, 59, -23, 48, 9, 24, 40, 38, 26, 10, 45, 68, 18, 43, -8, 19, -33, 3, 10, -33, -75, 57, 15, -7, -17, -33, 76, -29, 9, 34, 54, 54, 71, -34, -17, 25, 28, 81, -2, -76, 27, -73, 69, 3, -72, -16, -91, 26, 32, -56, -39, -79, -17, 30, 8, -61, -36, -30, -19, 37, -43, 18, -72, -3, 44, -15, 84, 9, -35, 9, -53, 120, -6, -29, -13, -52, 85, -46, -29, -37, -75, -16, -63, -56, -30, -7, -73, -24, -12, -21, 30, -64, -3, -1, 20, 39, -39, 1, 34, -2, 25, -20, 24, 23, 4, 38, 3, -6, 38, 87, -58, -24, 21, 51, 20, -19, -25, 65, 63, -16, 17, -32, 61, -25, -50, 82, 39, -29, -50, -87, 74, 16, -56, -70, -53, 67, 10, -82, -33, -29, 58, -8, -55, -20, -21, 10, -67, -7, 40, 5, 29, -108, -91, 17, 53, 64, -80, -101, -74, 23, 98, 17, 3, -68, -50, 5, 55, 31, -59, -61, -14, 15, 5, 27, -18, 26, 55, 0, -23, 8, -22, 42, 34, 27, 17, -20}

#define TENSOR_CONV2D_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_BIAS_0 {-26, 91, 83, 74, -45, -28, -29, -27}

#define TENSOR_CONV2D_BIAS_0_DEC_BITS {7}

#define CONV2D_BIAS_LSHIFT {6}

#define CONV2D_OUTPUT_RSHIFT {10}

#define TENSOR_CONV2D_1_KERNEL_0 {-7, -10, -27, -41, -27, 48, -9, -18, 40, 13, -15, -44, -33, 21, 20, 25, 102, -68, -3, 7, -28, 26, 4, -20, 2, 24, -56, -42, 6, 32, 1, -42, 4, -1, -2, 13, -18, 27, -8, 3, 54, -49, -25, -59, 26, -22, -5, -30, 16, -24, -42, -8, 30, 21, 2, -43, -3, 28, -21, 8, -36, -23, -24, 8, -22, 34, 4, -44, 26, -11, 15, -8, 4, -15, -1, -33, 27, -8, 19, -22, -10, 4, -36, 12, 31, -41, -35, -4, -81, 79, -5, -5, 10, -18, 7, 54, -36, 24, -3, -13, -33, 28, -41, -78, 23, -1, -2, -21, 7, 16, 18, 3, -13, -27, -8, -9, -52, -31, 61, 21, -9, 19, -3, -50, -46, 27, -18, -54, 43, -13, 21, 28, 5, 2, 35, -26, -51, -63, -63, 6, -31, -2, -63, 13, 44, -8, 2, -10, -7, -3, 32, 2, -17, -30, -14, 39, 0, -9, 8, 8, -53, -20, 24, -3, -21, 47, -51, -30, 33, -50, -31, 0, -16, -39, 2, 20, -90, 40, -22, 53, 7, -33, -27, 20, 62, -1, 20, -35, -37, 62, 2, -1, 27, -15, 13, -39, -2, -48, 12, 23, -4, -50, -30, -20, 11, 7, -7, -16, 14, 5, -41, -18, -7, 0, 1, -12, 5, 16, -6, -8, -12, -32, 5, 17, -7, -10, -26, -28, 13, 5, -21, -36, -2, 0, -7, -56, 21, 20, -2, -10, -3, 43, -21, -28, -50, 1, -26, 1, -21, 1, -10, -40, 0, 6, -9, -36, -5, -56, -8, -45, 22, 2, 11, 19, -33, 36, 2, -64, -14, -7, -26, -13, 7, 12, -3, -22, 5, 9, 4, -21, 1, -73, -4, -47, 10, 1, 16, 25, 16, 8, -28, 24, 5, -39, 9, 4, -50, 46, 25, -16, -8, 10, -43, -4, 17, -15, 28, -19, -58, -64, -13, -9, 29, 25, -18, 21, -60, 14, 19, -19, -20, -9, -14, -42, 6, 21, -26, 2, 39, -17, -1, 9, -14, -11, 34, 17, -44, 16, -15, -7, -42, 12, 2, -49, 7, -26, 9, -60, 31, 16, 25, -42, 39, 16, -2, 26, -27, 1, 23, 17, -25, 6, -37, -20, -33, 28, 8, -47, 35, -61, -5, -25, 0, -2, 15, -21, -8, 30, -59, 32, -10, 5, 50, -15, 39, -64, 7, 49, -19, 73, 1, 11, -54, -71, -25, -77, 51, 4, 36, -11, -59, -39, -25, -5, -31, 37, 35, 19, -3, 38, 13, 36, -29, 46, 10, -61, -30, -33, -66, -90, 17, 2, 13, -71, -14, -32, -47, 38, -35, -15, -18, -44, -26, -22, -48, 19, 11, 121, -41, -54, 32, 47, -54, 15, -9, 9, -30, -31, 31, 28, -33, 9, -40, -55, -58, -15, 8, -14, -29, -14, -9, -23, 7, -10, 20, 46, -5, 41, -1, 22, -9, -8, 41, 14, -9, -60, 20, -15, 19, -23, 0, -21, -11, -25, 30, 51, -31, -34, 31, 24, 42, 79, -20, 19, 17, -17, -52, -22, -77, -32, -48, -23, -15, -26, 53, -10, -4, -20, -18, -36, 22, 52, -15, 31, 56, 27, -9, -6, 7, -15, -1, -6, -52, -28, -46, 43, -8, -81, 1, -26, -28, -37, -41, 1, 34, -24, -46, -6, -2, 25, -36, 9, -56, -35, 18, -22, -82, -26, -21, -16, -3, -66, -29, -7, 24, 23, 7, -6, 3, -27, -9, -14, -17, -64, 50, -1, 3, -14, 9, -14, -56, -30, 30, -36, 25, 13, -42, -29, -19, -19, 6, 28, 29, -30, -19, -41, -29, -15, -2, 28, 6, 17, 64, -3, -15, 51, -7, -33, -38, -28, 18, -11, -59, 21, 26, 47, 9, -9, 32, -29, -27, -16, -2, 17, -9, 8, 52, -11, -3, -14, 10, -8, -15, -47, 29, -22, -13, 5, 29, -19, 3, -5, 25, -8, -34, 5, 6, -29, -11, -2, 12, -19, 1, -16, -36, -50, -20, -56, 40, -29, -20, -13, -15, -10, -31, 24, -3, -15, -6, 16, 27, -43, -10, 0, -13, 16, 13, -8, -25, 4, -47, -48, 17, -1, 10, 21, -1, 23, -12, -20, -53, -22, 4, -1, -22, -1, -6, -19, -23, -17, -49, 9, -25, 15, 5, 9, -21, 48, 24, 22, 28, -4, 22, -41, -35, 14, 23, -25, -29, 18, -11, 1, -18, -25, -68, 17, 7, 5, -7, -2, -41, 53, 8, 2, 36, -24, 3, -35, -9, 23, -4, -5, -10, 33, -2, 11, -14, -28, -47, 26, 2, 23, 12, 16, 2, 46, 21, 9, -17, 2, 2, -16, -43, 46, 0, -25, -45, 36, 3, 25, 17, 6, -68, 11, -12, 26, 14, 20, -36, 42, -15, 11, 31, -50, -55, -38, -40, -12, -13, 17, 0, -8, -33, -45, -20, -3, 36, 16, -6, 33, -5, -2, -37, 2, -28, -14, 61, -10, -31, -37, -32, 11, 22, 21, 37, 11, -39, -7, -41, -10, 36, 12, 15, 22, 1, -35, -19, 7, -50, -41, 64, 18, 16, 16, 31, 26, 16, -6, 26, -2, -18, -2, -10, -12, 4, -14, 9, -4, 12, -3, -3, -10, -37, -13, 50, -7, 31, 33, 6, -18, -15, -9, 29, -38, 8, -10, -12, 37, -33, 7, -9, -12, -17, -35, 53, 17, -5, -37, 27, -12, -4, -30, 32, -15, -3, 4, -5, 0, 1, -18, -7, 4, -26, 33, -29, -12, 39, 0, 56, -17, -35, -47, 19, 3, -1, -34, -6, -1, 22, -9, -21, 19, 3, -25, 22, 8, -43, 12, -23, -15, -42, -27, 41, -30, -5, -15, 15, -4, 13, -21, -1, -29, 2, -16, -25, 23, -2, -37, 9, -6, -8, -29, -7, -6, -24, -33, 39, 42, 11, 20, -17, -29, 5, 39, 2, -26, -33, -15, -12, 2, 3, -43, 28, -8, 7, -29, -28, 1, -23, -27, -3, 2, 23, 22, -9, 24, 7, -8, -21, 11, -4, 13, 13, -19, 8, 12, 0, 19, -7, -42, 16, -30, -25, -4, -15, -21, 6, 31, 13, 44, 4, -44, 1, 31, -1, -12, 16, -10, 18, 8, 30, 21, -1, -22, -30, -2, -12, -14, -9, 11, 29, -9, -15, 17, -10, -67, 39, 26, -29, -10, 18, 6, -10, -38, -3, 16, 24, -20, -1, -6, 4, 8, -15, 0, 22, -23, -32, -15, -65, -55, 19, -37, -25, -9, -4, -24, -32, -40, -23, 39, 14, -13, -11, -17, -31, -18, 9, 24, 8, -30, 33, -16, 59, -6, 19, -24, 26, -18, -61, 1, 36, -5, 27, -124, -30, -13, 56, -10, 15, -55, -1, -23, -21, -6, 25, -54, 22, -46, -19, -3, 6, 1, -73, 36, -24, -55, 19, -11, 6, -5, 17, -16, -19, -24, -14, -19, -25, -10, 1, -47, 2, -39, 9, 16, -31, 22, 3, 8, -18, -9, 7, 23, 22, -32, -69, 45, -2, -5, 11, -41, -6, 15, 7, -81, 1, 5, 18, 5, -63, -1, -25, 39, -18, -25, -41, 48, 35, -4, -62, 39, -14, 7, 0, -3, -4, -3, -40, -21, 31, 16, 32, 23, -46, -47, -20, 2, -6, -2, -23, -4, -60, -19, 3, -13, 24, 6, 4, 10, 20, -5, -43, -33, -9, 9, 17, 15, -29, -22, -32, 25, 32, 1, -34, 43, -52, -44, -30, -15, 34, 7, 25, -28, 0, 3, -38, -43, -16, 9, 11, 14, -29, -3, -7, 2, 31, 13, 13, 31, -34, -13, -32, -4, 13, -3, 35, 19, 34, -14, -7, -51, -28, 3, -4, 15, -26, -17, -8, 34, 21, 12, 13, 43, -48, -33, 7, -12, 2, 31, 31, -27, -19, -19, -12, 0, -41, 1, 11, 19, -2, -11, -11, 4, -14, 28, -62, -17, 27, -25, -60, 4, -20, 28, 24, -20, 15, 19, 36, -66, -34, 20, -11, 8, -6, 3, -1, 15, -22, 26, -8, 19, 19, 4, -10, -15, 4, 39, 16, 27, -28, -4, 58, 2, -55, 25, 24, -22, 19, -16, 9, 11, -35, 11, -13, 10, 5, 1, 8, -5, 6, 4, 26, 9, -19, -12, 41, 26, -24, 27, 35, -16, 15, 3, -11, 35, -29, -24, 1, 13, -17, 9, -5, -32, 1, -25, -3, 13, -58, -71, 64, 25, 37, 68, -15, -60, 0, -4, -30, -64, -21, -9, -53, 43, 27, -32, -35, 2, 6, 34, 10, 0, -28, -16, 1, 1, 82, 51, 14, 38, -31, -3, 3, 14, 67, 1, -7, 51, -57, -21, -1, 24, 3, 9, 19, 28, -47, -3, 12, 33, 26, -84, 44, 36, -7, 53, -33, -2, -18, -15, 9, 7, -78, 34, -62, -27, -36, 28, 3, -34, -36, -23, 14, -8, -64, 13, 21, 34, -11, 8, -28, -47, -51, -56, 20, -2, -32, 15, -31, -58, -28, -16, 26, -15, -11, -30, 5, -6, -32, 9, 18, -25, -19, 9, -11, 0, -46, -34, -5, 39, -41, 2, -6, 10, 5, 15, 8, 27, -31, -19, 17, -30, 7, -29, -26, -19, -17, -1, -15, 6, -16, -25, -26, 11, -39, 17, -8, 9, -92, 30, -26, 33, -18, -20, -6, 9, 17, -37, -26, -7, 2, 21, 19, -2, -22, -19, -29, -26, -11, -18, 20, -43, -84, -44, -24, 22, -27, -17, 0, -12, -20, -7, -8, 34, 16, 21, 13, -14, 0, 14, -27, -15, -9, -28, 28, -32, -26, -57}

#define TENSOR_CONV2D_1_KERNEL_0_DEC_BITS {8}

#define TENSOR_CONV2D_1_BIAS_0 {45, 54, 104, 71, 61, 85, 61, 6, 18, 45, 30, 70, 43, -17, 9, 103}

#define TENSOR_CONV2D_1_BIAS_0_DEC_BITS {6}

#define CONV2D_1_BIAS_LSHIFT {5}

#define CONV2D_1_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_2_KERNEL_0 {-22, 29, 54, -3, -6, 26, -26, -22, 78, -18, -7, 40, 1, -39, 38, -26, 36, -26, -19, -9, 34, 35, -24, 16, -29, -55, 14, -7, 6, 34, 35, -18, 2, -18, 62, -3, -1, 46, -28, -14, -33, 12, 11, 51, -6, -50, 62, -22, 18, 0, 16, -10, 14, 1, -8, 18, -3, -46, 17, 29, -8, -37, 29, -14, -35, -1, -10, -54, 0, 27, 11, 21, 23, 11, 29, 24, 24, -51, -13, -4, 2, -20, -6, -6, 19, 3, -7, -5, 22, 19, -3, 35, 12, -22, 14, -21, -18, -34, 0, 14, 17, -16, 27, -15, -22, -14, -20, 14, -22, -28, -13, -5, -26, -3, -50, -7, -34, 29, -16, 13, 18, 16, 24, 7, -16, 17, -5, 20, -33, -43, 25, -12, -6, -19, 4, 16, -8, 11, -24, 3, 45, 3, -29, 21, -12, -29, -3, -23, -28, 20, -20, 12, 15, 21, 10, -14, 19, 10, 2, -11, -7, -6, 27, 30, 40, 12, 6, 3, 3, -1, 20, 2, 10, 11, 0, 19, -7, -12, 11, -11, 29, 25, -16, 9, 7, 27, 3, 13, -4, -4, 20, -23, -4, -12, -46, 23, 49, 7, -14, 8, 8, -19, 27, -16, 6, -16, -27, 9, 4, -18, 16, -1, 0, 21, 35, -18, -6, -38, -14, -33, -23, -24, -28, 17, -27, -7, -11, 17, 24, 8, -9, -14, 16, 3, 39, -13, 0, 17, -23, 5, 24, 17, 31, 20, 6, 11, 6, 13, -3, -4, -45, 4, 18, 15, -1, -15, 12, 23, 31, 51, -23, -7, -23, -41, 22, 21, -8, -21, 12, 11, -5, -7, 18, -9, 2, 15, 3, 42, -45, 20, -13, -1, 20, -11, 10, -3, -7, -13, -32, 6, 15, 34, -25, 29, 9, 14, 35, 32, 12, 11, 22, 24, -42, 38, 2, -2, 15, -20, 15, -4, 14, 32, 41, 35, 14, -14, -5, 3, 3, -9, 5, -22, 5, 8, -36, 11, 12, -3, 36, 14, 8, 10, 0, 21, -39, 18, 3, 6, -26, -8, 0, 12, -3, 26, -33, 30, 7, -4, 19, -8, -24, 20, -2, -13, 13, -3, -31, 11, 11, 8, 21, -11, -1, -23, 1, -48, -31, 21, 14, 11, -25, -32, -10, 8, 10, -23, 2, 43, 13, 2, 25, 13, 10, 16, 60, 33, 28, 21, 49, 4, 42, -11, -51, -24, 29, -33, -5, 3, -21, 14, -7, -15, 7, 2, 19, 19, -12, -32, -29, 10, -4, 8, 7, 5, 20, -23, 31, -5, 6, 19, 11, -9, 25, -19, -12, 4, 40, 23, -9, 3, -18, 10, 15, -21, 12, -27, 19, 6, 17, 13, 23, -16, -28, 23, 2, -21, -6, 12, 20, -7, -4, -10, -17, -26, 34, -16, -9, 20, 51, 25, -17, 13, 11, -20, -25, -8, -19, -28, -37, 11, 0, 47, -3, -7, -6, 19, 5, -4, -17, 43, -10, 15, -32, -27, -6, 15, -13, -15, 32, 12, -4, -6, 4, -20, 16, 0, 2, 14, 13, 0, -2, 28, 5, 11, 20, 8, -6, 23, 4, -4, -31, 22, 11, 15, 2, -38, 1, -8, 16, 0, 9, 19, 4, 3, 21, 20, -1, -9, -3, 35, 15, 2, -12, 23, 21, -29, -5, -7, -12, -25, -10, 15, -12, -14, -18, 8, 16, -40, -17, 11, 20, -17, 20, 15, -7, 6, 1, -25, -14, -2, 29, 3, 0, 17, -9, 19, 29, -8, 17, 9, -35, 1, 5, 16, -14, -10, 27, -6, -19, -26, -4, 8, 31, 6, -1, -42, 10, -13, -15, -10, 41, 8, -18, -10, -1, 6, 21, -21, 46, -17, 6, -6, -4, 22, 19, -33, -41, -9, 23, 25, -25, 0, -45, 36, 18, 7, -5, 25, -10, 23, -42, 0, -14, 6, 18, 30, -8, -39, 9, 10, -28, -18, 10, 17, 0, 29, 6, 13, -11, 21, 11, 12, 30, -8, 52, 15, -9, 18, 15, -6, 15, 16, 15, 4, 7, -13, 7, -12, 5, 1, 7, 3, -9, 12, 10, 10, 24, -27, 4, -9, -4, 25, -22, 33, -17, 36, 17, 24, -10, -11, 24, -64, 0, -10, 28, 6, -7, 30, 4, 1, -1, -15, 0, -35, 0, -50, -19, 14, -25, -36, -50, -13, 13, 38, -8, 12, -22, 14, 22, -5, 6, -5, 34, -9, -24, 4, 18, 23, -18, 26, -4, 10, 15, -10, -9, -8, 19, -30, -4, -4, -50, 3, 5, 31, -25, -23, -14, 15, -2, -12, 12, -22, 18, -54, -1, 35, 17, 42, 33, 40, 14, -20, -46, 7, 30, 2, -2, 5, 18, 36, -8, 5, 13, 18, 25, -41, -1, -37, 24, -33, 33, -34, -62, 0, 23, -15, -21, 24, -33, 1, 42, -12, -10, 37, 7, -25, 30, 4, -14, 41, -23, -7, 2, 25, 6, 42, 14, -6, 33, -3, 13, 20, 1, -43, -19, -9, 5, 1, 25, 7, -5, 2, 16, -2, -24, 9, -11, -21, -7, 7, 7, -11, -17, 23, -18, 29, 2, 16, -11, -29, -8, 2, -21, 23, 22, -15, 0, 1, 10, 9, 11, 0, 40, -11, 30, -24, -13, 24, -20, -1, 50, -8, 4, 29, -49, 6, -12, 4, 35, -16, 14, -32, -19, -17, -9, 25, 0, 12, 30, -14, -4, -14, 16, -27, 0, -12, -5, -12, -21, 34, -25, -15, -7, 23, -21, 30, -23, -24, 20, 34, -9, 23, 21, 15, -50, 25, -9, -11, 14, 3, 6, -35, 2, 13, -24, 22, 2, 30, 7, -12, 44, -4, -33, 15, -6, 19, 14, 21, -13, -13, 6, -7, -2, -32, 57, -21, -4, -54, 6, 18, -11, 30, -19, -47, -2, 31, -22, 27, -9, -4, -9, 21, 11, 10, 4, 62, -34, 17, -9, 2, 25, 27, -13, 35, 21, -25, 3, -30, 12, -13, -6, -11, 46, 5, -8, -10, -3, 0, -1, -20, 13, -13, 0, -9, 9, -6, 13, -14, 4, 5, 5, -11, 10, 3, 5, -8, 13, 43, 6, 26, 1, -21, 26, -4, 18, -5, 0, -1, -12, 16, 5, -4, 7, -4, -18, -14, 14, 6, 2, -55, 4, -31, -1, -27, -8, -16, -13, -5, 17, -19, 13, 32, -9, 2, 25, -11, 19, -16, 20, -15, -3, 11, -21, 15, -7, 9, -25, 2, -4, 16, -28, -15, 0, -31, -28, -11, -27, 7, -21, -7, 32, -16, -1, -1, 36, 26, -52, -11, 9, 10, -24, 11, -14, -3, -12, 0, -4, -29, -1, -31, 15, 5, 2, 17, 0, 10, -21, 45, 10, -34, -8, 26, 9, 6, -12, 26, -5, -6, 3, -30, -30, 16, -6, 20, 13, -7, 16, -13, 17, -10, -1, -11, -17, -1, -42, -5, 15, 17, 9, 11, -18, -11, -25, 21, 5, -3, 3, -26, -7, -3, 15, -35, -15, 4, 15, 7, 29, 4, 16, 16, -34, 38, -41, 9, 3, 16, -21, -10, 20, -10, 30, 9, -1, 11, -28, -6, -20, -26, 11, -22, 3, -1, 20, 11, 2, -23, -23, -19, 11, 31, 10, 21, -44, 8, -15, 13, 14, -13, 7, -25, 27, 9, 1, -35, -16, 1, -19, 45, 48, 26, 47, 25, 3, -39, 16, 13, -17, -4, 15, 26, 25, 25, -9, -3, -53, 17, -5, 15, 2, -21, -14, -5, 10, -11, 14, 5, -17, -29, -7, 4, 18, 0, -11, -6, 24, 31, -21, -46, -46, 32, 7, 6, -17, 3, -63, -45, -17, 2, 6, 0, 4, 24, -30, -19, -44, 10, -14, 34, -22, 10, -17, -27, -4, 10, -9, -36, 3, 61, 9, 34, 32, 15, 39, 30, 18, -28, -13, 15, 16, 30, -9, 3, 45, -14, 9, 23, 3, 38, -15, 0, -10, -7, -1, -17, -5, -15, 6, 3, 35, -25, -25, 18, -1, 23, 27, -8, -11, -10, -22, 1, -7, 7, -28, -7, 23, 8, 11, 41, -3, -2, 12, -11, 3, -12, -21, 20, -29, -31, -16, -4, 33, 18, -19, 11, 16, -10, 7, -13, 3, 8, 10, 13, 16, -30, 8, -14, -4, 20, 4, -14, -6, -16, -46, 1, 18, -40, 1, 15, 0, 3, -3, -3, -12, 41, -3, -28, 41, 14, -20, -16, -3, -7, -23, 59, -27, -11, 2, 24, 30, 4, 46, 13, 13, -9, 13, -18, -22, -10, 6, 26, 31, 29, -1, -33, -27, -8, 8, 3, 19, -3, -10, 27, -7, 11, -20, 27, -16, 19, 6, 14, 3, 3, -3, -7, -18, -22, 14, -18, -11, 15, -9, -20, 12, -12, -39, 16, 25, 0, -17, -8, 16, 1, 16, 43, -12, 40, -43, 6, 37, 17, 1, -33, -22, -1, -25, 26, -26, -10, 1, -12, -33, 6, 16, -27, 28, -31, -29, 16, 23, 6, -16, 11, -8, -6, 8, 25, 0, -28, -9, 9, -15, -9, 34, -8, -12, 4, 2, 24, 14, 10, -14, 51, 6, -10, 15, 19, 11, -37, -7, -4, -5, -12, 17, 12, 7, 13, 36, 8, 45, -32, -14, -17, 10, -12, -10, 16, -12, 20, 13, 8, 28, 38, 6, -19, -31, 12, 13, -43, 1, -20, 10, -12, 25, -36, 2, 35, -23, -19, 19, 4, 7, 0, -18, 40, 2, 31, -69, -22, -12, 10, 11, 17, -14, 30, 9, -29, 4, 25, -10, -12, 27, 31, -37, 6, -10, 3, -29, 21, 18, 9, -40, 6, -31, 5, -43, 13, 1, 6, 26, -13, 10, 18, 22, 23, -9, -9, -29, 1, -5, -45, 4, 1, -22, -10, -4, -4, 24, -5, -14, 10, 15, -1, -48, 20, -23, -18, -19, -10, -1, -11, 32, 6, -15, 1, -7, 13, -6, 5, -11, 25, 2, -7, 21, 7, -17, -19, 11, 4, 3, -11, -21, -8, -7, 7, -13, -7, -21, -23, -35, -12, 28, -8, 0, -10, -34, 6, -1, -6, 3, 8, 2, -7, 12, -1, 27, -8, -5, -2, -6, 25, -9, -3, 12, 3, -43, -8, 49, 9, -10, 30, 2, -2, 7, 23, -26, 2, -10, 30, 26, -29, -8, 1, 59, -10, 23, 26, -4, -16, -44, 2, -36, -2, 9, -5, -29, -35, -10, -38, -34, -29, 0, 20, 2, -4, -4, -10, -5, 6, -9, 21, -15, -11, 6, 0, 13, -3, -7, 8, 31, -3, -5, 11, 9, 12, -28, 11, 18, -10, 23, -6, -71, 25, -16, -3, -5, 7, 15, 6, 1, 24, 4, 38, -8, 21, 41, 1, 9, 5, -61, -5, 10, 16, 9, 10, 3, -16, -23, 12, 3, 3, 15, -42, 4, -15, 53, 35, 7, 12, -19, 46, 7, -4, -34, 26, 15, 28, 25, -25, 42, -23, 0, 28, -34, -2, 10, -2, -2, 4, -25, 29, -19, -21, -3, -16, -9, -39, 2, -1, 19, -20, -22, 19, 17, -6, 6, 19, 32, 9, 13, -15, 12, -14, -14, 7, 16, 9, 0, 47, -10, -6, -25, 46, 5, -27, 6, -27, -26, -31, -5, -8, -24, -15, -6, 25, 40, -38, 23, 10, 12, 0, 2, -6, -6, -15, -13, -21, 43, -13, -8, 20, 7, 7, 17, 34, 20, -10, -15, 3, 19, -2, -3, 8, 1, -16, -20, -28, 15, 10, 10, -1, -29, -14, -30, -3, -30, 34, 9, -14, 2, -18, 1, -8, 12, 37, 28, 27, 25, -9, -27, 2, -9, 25, 38, -22, 7, 5, 31, -34, -2, 6, 5, 11, -20, -28, -28, -9, -18, 3, -13, 2, 14, -19, -24, -11, 5, 8, 15, -4, -11, -10, -14, 2, 3, 2, 13, 30, -53, 13, 25, -11, -10, 4, -14, -4, -29, -18, 5, 1, 6, 27, -18, 26, -21, -21, -18, 4, 4, -32, -25, 12, 4, -19, 7, 0, -12, 15, 32, -26, -16, 35, 18, 25, 33, -22, 11, -20, 17, 15, 7, -24, 22, -5, 20, 59, 37, 10, 0, 33, -17, 20, -8, -17, 26, -2, -6, 20, 25, -57, -30, -19, -30, 19, 7, 22, 12, 35, -17, 33, -11, -26, 15, -18, 13, -34, 18, 25, 18, 14, 16, 22, -13, -6, 10, -11, 0, 18, -6, 71, -25, -5, -43, 29, -41, -28, 6, 29, -7, 23, -8, 11, -9, 16, 10, 44, 10, 45, 11, 17, -6, 17, -35, 11, 0, -25, 48, 8, 5, 7, -10, -26, -2, 29, -29, -18, 14, 8, -20, 12, -12, -27, -20, 43, -13, 9, -31, 43, -6, -6, 10, 13, 19, -22, -16, -5, -19, -5, -15, -22, 0, 26, -4, -3, -25, 1, 13, -10, 16, 6, 5, 19, 2, 17, -37, 20, -21, -34, -32, 12, 1, 28, -11, -18, 6, -8, 6, -31, -4, 1, -17, -2, 0, -17, 17, -21, -32, 14, 19, 1, 23, 23, -1, -4, 3, -3, 0, 16, 2, -33, -3, 4, 1, 4, 0, -8, 5, 25, 17, -15, 18, 42, -16, 33, 1, 19, 24, -19, -9, -27, -22, -48, -21, 12, 6, -17, 22, -15, 11, -6, 12, 14, 25, 3, -10, -7, 8, -6, -16, 25, -10, 9, 0, 4, 30, 28, 11, 27, 2, 22, -25, -19, 1, -22, 2, 10, 2, 24, 16, 12, 21, -18, -39, 28, 42, -22, -12, -17, 8, -10, 19, 12, 28, 15, 25, -51, 11, -8, 16, -29, 16, -6, -29, -13, 20, -13, 13, -2, 30, 8, -5, 4, -23, 11, 24, 0, 3, -25, -21, -27, -30, 5, 10, -16, 44, 27, 50, -12, 20, -4, -29, 27, 6, 24, -12, 24, -14, 5, 34, -11, 43, 20, -9, -12, -34, 43, 43, 6, -6, 14, 30, 5, 30, -31, 13, 10, 5, -32, 17, -39, -32, -13, 14, 15, 26, -7, -8, 5, -7, -16, -9, -30, -3, -28, 52, -9, -16, 23, -6, -18, -1, -16, -22, 4, 5, -19, 7, 0, 2, -6, -8, -15, -11, 26, 26, -31, 15, -11, 1, -35, 25, 34, 11, 12, 8, 15, -22, 31, 9, -12, 19, 4, -14, -28, -37, 15, 12, 26, -9, -33, 22, 6, 26, -49, 56, 30, 12, 21, -21, 23, 21, -1, 41, -36, -24, -9, 15, -14, 24, -7, -16, -38, -14, 10, 22, -4, 23, 24, 23, -11, -3, 59, 14, -9, 3, 3, 1, -6, 11, 26, -1, 7, -15, 15, 52, 16, -17, -5, 21, -22, 6, 1, 2, -1, -15, 14, 18, 15, 1, 23, 4, -10, 6, 2, 28, -13, 5, -16, -3, 5, -13, 34, -19, -23, -16, -19, 30, -1, -23, -12, 12, -30, 18, 12, 20, 20, -17, -12, 23, 34, -7, 10, -19, 18, 0, 20, 30, -18, -28, -40, 0, -23}

#define TENSOR_CONV2D_2_KERNEL_0_DEC_BITS {7}

#define TENSOR_CONV2D_2_BIAS_0 {-44, -9, -45, -92, -66, -22, -65, -37, -36, -61, 13, 9, -21, -62, -25, -61, 37, -17, -77, 11, -108, -42, -53, -72, -54}

#define TENSOR_CONV2D_2_BIAS_0_DEC_BITS {6}

#define CONV2D_2_BIAS_LSHIFT {4}

#define CONV2D_2_OUTPUT_RSHIFT {7}

#define TENSOR_CONV2D_3_KERNEL_0 {24, 14, -4, 12, -38, 28, -23, -11, -14, -3, -6, -23, -18, 20, 2, 7, -16, 14, -16, 5, -42, -5, -50, 47, 41, 6, 4, -61, 1, -39, 31, -25, -9, 23, -18, -4, -35, -43, -8, -17, 26, 6, 9, -7, -2, 3, -9, -10, 22, 42, 1, 26, 4, 0, -23, -20, -2, 41, 1, 25, 1, -21, 0, 26, 18, 8, 9, -11, -17, -15, -14, 12, 2, 22, 64, 5, -22, -12, -30, -16, 60, -31, -17, 6, -10, -21, -19, -40, 61, -28, 64, 15, -20, 3, -5, -45, -22, -2, 1, 0, -36, -35, -12, -27, 48, -3, 4, 15, 29, 4, 27, -3, 17, 15, 8, -19, -52, 6, -43, -1, -18, -37, 6, 12, -22, 30, -9, -9, -22, -33, 36, -23, 35, 29, 39, 9, 14, -44, -6, -8, 2, -10, 22, 29, -42, 20, 21, -13, 46, 21, 13, -21, -8, 14, -11, -24, -33, -7, 12, 43, -28, 56, -5, 18, -7, 8, 6, -21, -4, -22, 11, -60, -28, 19, 6, 17, 37, -21, -10, -10, 4, -52, 0, 30, -10, -7, -27, 2, -7, 20, 15, -4, 11, -32, 4, 29, 21, -2, -12, 35, 0, -41, 4, 54, -19, 1, 39, -1, 20, -25, 10, 27, 15, -7, -28, 13, -11, -1, 61, 35, 28, -11, -7, 7, 12, -5, -44, -17, 1, 6, 24, -13, 9, 16, -10, 12, -32, 26, 6, -31, 9, -6, 5, 32, 14, 42, 16, -21, -3, 47, 1, -43, -8, -11, 16, -14, 7, 16, -22, 0, -3, 8, 14, 4, 5, 6, -11, -24, -5, 33, 4, -20, -1, -35, 20, 11, -45, 28, -26, -5, 10, -23, 38, -35, -15, -15, -22, 8, 36, -34, -3, -28, -18, -17, -11, 6, 16, -5, 10, 15, -29, -6, 52, -2, -11, -7, -13, -5, -1, -68, 60, 59, 56, 5, 18, -12, 3, -17, -23, -25, 7, -8, -3, -9, 22, -4, -47, -20, 24, -2, 20, 64, 39, 41, -14, 8, 11, 43, -60, 17, -26, -14, 19, 37, 23, 36, 30, 2, -30, 3, -10, -23, -22, -33, 23, 3, -28, -11, 30, 33, -7, 4, 23, -14, -66, -33, -32, 30, -20, -28, 30, -30, 17, 0, 12, -16, -12, 13, -8, 54, -6, 28, 88, -45, 48, -34, 41, -32, -63, -10, 5, 47, -6, 15, 19, -16, 12, -39, -35, 16, -17, -2, -30, 14, 8, -29, 23, -12, 5, -36, -8, 5, -6, -23, -7, -17, 17, -4, 37, -81, -24, 6, 9, -5, 11, -6, 12, -2, 30, 20, -9, 19, -9, 77, -10, 23, 17, 5, -33, -23, 57, 30, 5, 4, -21, -8, -20, 49, -45, 40, -18, 31, 10, -7, 3, -48, 7, 9, 63, -2, -48, -25, 5, -7, -6, 31, 53, 28, 30, -13, -39, 36, 39, -23, 38, -33, -47, -12, -10, -26, 37, 39, 6, 36, -36, 14, -3, -41, 18, 17, 16, 26, 30, -10, -16, -34, 8, -5, -32, 53, -3, 8, -25, -3, -8, -6, -24, -44, -3, -36, -17, 10, -37, 12, -28, 21, 25, 3, 2, 38, -20, -36, 16, -1, 8, -30, 29, 24, -13, 12, -37, 19, -33, -31, -9, 40, 14, -21, 8, -48, 17, 30, -16, -34, 1, -24, -32, 23, -8, 19, -11, -10, -14, 33, 48, -19, -10, -38, 29, 6, -23, 16, -24, 21, -29, 49, 5, -4, 38, 14, -21, 4, 6, -25, -16, -2, 22, 36, -20, 29, 6, 0, -20, 25, -36, 23, -10, 1, -51, -9, 34, 29, -2, 28, -27, 7, 7, 19, -8, 2, 22, 7, -3, 14, -1, -2, -28, -14, 33, -36, 48, 50, -26, -2, -19, -5, -32, -41, 49, 5, -3, -7, -52, 29, 4, 23, -46, 8, -11, 27, 16, -31, -25, -37, 18, 46, 48, -7, -24, 26, 6, -32, 25, 52, -18, 46, -12, -16, 21, -36, 22, -45, 18, 83, -13, 23, -4, 15, -42, -16, -17, -26, -30, -28, 14, -45, -34, -78, 19, 1, 40, 63, -20, 1, 49, -8, 12, 9, 20, -33, -5, 14, 12, -40, 19, 3, -35, -14, 7, -33, 8, -20, -30, -25, -12, 7, 9, -16, 3, 38, 24, 21, 40, -50, -35, 50, -2, 1, 1, -4, 18, 12, 8, 35, -13, 6, -38, 6, 19, -11, -1, -37, -14, 17, -25, -7, 5, -64, 0, 65, -2, 17, 14, -11, 11, -20, -1, -12, -21, 48, 26, -41, 23, 69, -5, 7, -29, -6, -17, -18, 28, -15, -38, 38, -27, 5, -24, -13, 24, -31, 11, 56, -45, -10, -18, -24, 47, -20, 8, 3, -42, -14, 37, 8, -40, -9, -7, -10, 12, 3, -31, 7, 26, 7, -26, -25, 27, -19, -20, 17, 18, -24, -22, 16, -52, -12, -22, 49, 5, 26, -17, -25, 6, 27, -17, 36, 40, -4, 5, -15, -21, -14, 17, 14, -37, 27, -6, 1, -6, 11, 33, 1, 4, 6, -19, 34, 6, 22, -28, -3, 46, -1, 13, 5, 36, -23, 30, 4, -23, 5, 47, 31, 8, -2, 22, 29, 4, -34, -19, 5, -33, -36, 6, 23, 3, -31, 2, 32, 14, 45, -37, 10, 52, 3, 25, 9, -41, 2, 1, 4, 32, -24, 18, 4, 15, -8, 4, -35, 25, -25, 12, -25, 20, 0, 21, 2, -15, -1, -44, -7, 2, 21, 20, -22, 31, -1, 32, 8, 14, 22, 35, -4, -29, -17, -43, 41, -24, 21, -20, 46, 4, 41, -21, 50, -6, -6, -14, 42, 35, -41, 15, -32, 44, 18, -21, -17, -31, 26, -26, 0, -43, 41, -30, -21, -11, 41, 10, -6, 9, 5, -52, -13, 23, 63, 32, 35, -17, 23, -18, -5, -30, 5, 4, 9, -25, 25, 6, 2, 12, 8, -3, 54, -2, -11, -28, 21, -8, 36, 52, -18, 3, -23, 18, 6, -64, -32, 13, -10, 62, 25, -35, 13, -38, 19, 24, 23, 11, -29, 33, -27, -11, 4, 68, 21, 6, 29, -3, 25, 2, -19, 6, -8, -6, -17, 41, -39, 37, -34, 36, 7, -12, 13, 1, 20, -40, -7, -14, 24, 3, -7, -29, -28, -2, -5, 45, 21, -16, 1, 6, 18, -17, -70, 34, 7, -21, 19, -1, -10, 10, -8, -12, -36, -16, 0, 13, 14, -1, 4, 6, 41, -10, -25, 10, 6, 18, -1, 18, -3, -20, -13, 8, 50, 23, -10, 50, -38, -12, -31, 27, 26, -14, -29, 16, -22, 28, -20, -30, 24, -2, 27, -20, -64, 24, -7, -90, 32, 16, 34, -29, -19, -30, -52, 14, 25, -13, -17, 8, -10, 30, 26, 41, -43, 5, -2, 7, -38, 0, 4, -26, -26, 31, -19, -22, 13, 28, -18, 14, 26, 19, -4, 10, 49, 5, 55, -13, 67, 2, -17, -13, -25, -1, -40, -53, -32, 15, -7, 47, 17, 36, -7, -4, 24, -16, 10, -3, 38, -45, -6, 6, -23, -19, 8, 0, -18, 27, -20, -10, 24, -12, 31, 35, -11, -16, -2, 31, 23, 28, -12, 7, 18, 25, -9, 38, 39, 32, -33, -78, 35, 2, -35, 13, 27, -33, -39, 9, 41, -9, 10, -2, 2, 11, -8, -12, 11, -6, -18, -27, 48, 20, -18, -30, -1, -29, 0, -7, 3, -14, -5, 17, -50, -24, -10, 23, 3, 70, -18, 50, -12, -16, 26, 13, 46, 25, -3, 0, 6, 10, -9, 41, 22, 3, 5, 14, 46, -6, -31, -84, 11, 26, 37, 30, -4, 6, 10, -38, 10, 26, 11, -39, 23, -50, 15, -22, -3, 37, 2, -20, -16, 16, 17, 1, -25, -3, 0, 13, -2, 41, -4, -11, 3, 21, 23, -43, -34, 18, 2, 1, -7, 21, 33, 36, 5, -17, 7, 20, -22, -28, -16, 28, 19, -66, -33, -37, 3, -25, -32, 73, -36, -25, 12, 33, -31, 1, 11, -24, 10, 46, 20, 12, -17, 4, 10, -14, 20, -11, -29, -64, -24, -21, -22, -4, -15, 1, -80, 40, -66, 26, -38, 34, 31, 29, 7, 36, 7, 56, -40, -26, -5, 17, 6, 36, -13, -12, 22, 1, 30, -5, -32, 15, 12, -2, -5, -46, -4, -13, -8, 6, -49, 5, 23, -11, 7, -50, -24, -32, 6, -10, -24, 2, -7, 11, 29, -43, -9, -13, -8, 9, -29, -13, 61, 24, 48, 17, 31, 52, -20, 8, 34, -1, 3, 2, -17, 6, -13, -20, 7, 4, -22, -1, -22, -25, 9, 13, 50, -9, -39, -22, 7, -18, -4, 17, -10, 21, -14, -37, -18, -28, -8, -34, -30, -45, 2, -4, 25, 27, 40, 15, -22, 16, -22, 45, -3, 36, -43, 11, 29, -23, 37, -23, 26, -24, -10, -43, -22, 36, -2, 17, 50, -33, 22, -12, 10, 7, 51, -25, -11, -42, 24, -16, -7, -13, -16, -3, -15, 17, -18, -17, -69, -51, -53, 8, -8, 4, -24, 30, -1, 17, -14, -37, -9, 48, 23, 43, 29, 3, 32, -32, 9, -35, 21, -8, -25, 0, -24, 28, -17, 15, -42, -8, 32, -36, -40, 1, 21, 18, 22, 5, -6, 44, 11, 32, -1, -32, -2, 12, -14, 40, 1, -21, 11, -16, 11, -6, 16, 11, 40, 6, -2, 53, -29, -13, -16, 62, -2, -27, 24, -39, -13, 30, -24, -35, -35, -64, 5, 21, 44, 27, -25, -20, 3, -14, 14, -40, 25, 14, -9, -20, -23, 22, 10, 36, 9, -27, -11, -26, -7, -23, 25, -3, 5, -29, -7, -10, 15, -15, 32, -12, -11, 24, 12, 13, -8, 14, -2, 7, 43, 6, -24, 22, -4, -48, 11, -38, 22, -5, -6, -20, -5, -1, -6, -7, -76, -12, 37, -10, 6, -6, 0, -7, -5, -16, -1, -32, -13, 22, 8, -15, -18, -27, -4, -9, 12, -14, 45, -4, -19, -7, -2, 54, 25, 38, -20, -9, 14, 17, -14, 11, -29, 13, 34, 43, -19, 11, -17, 2, 23, -1, 0, 31, 25, 16, -33, 5, 2, 6, -4, -14, 14, -15, -50, 42, 28, 2, -4, 33, -63, -28, -3, -15, 12, -31, 15, 42, 62, -35, 17, 18, 9, -42, 2, -12, -49, 31, 13, -32, 9, 22, 12, 9, -29, 32, -24, 10, -22, -17, -25, 31, 9, 17, 17, -16, 24, 20, 6, 26, -66, -21, 45, -48, 39, -1, -37, -27, 25, 10, 7, -39, -16, -3, -21, 12, 4, 36, -4, 101, -40, -28, 29, -10, -58, -1, 3, -3, -14, 11, -40, -26, -37, 32, 30, 4, -13, 25, 35, 16, 10, -21, 73, 14, 3, -39, -12, 74, -2, -49, -5, -8, 16, 20, 23, 13, 11, -11, 15, -21, -6, -63, 2, 12, -23, -35, 36, 37, 17, 4, -18, -30, 27, -28, -2, 34, 5, -45, -51, -11, 69, -47, -18, 8, -16, 29, 48, 16, 65, 26, -23, 15, 28, -30, -2, 51, -9, 17, -21, -20, 26, 51, 43, 6, 0, -3, 20, -7, 26, 6, -41, -40, -17, -16, -12, 51, 14, -14, -28, 4, 0, 3, 55, -15, 7, 12, 5, -9, 12, 27, -14, -12, -60, -41, 0, -20, 5, 20, -4, -12, 10, -21, -19, 32, -2, 40, 16, 37, 2, 1, 19, 4, -10, -47, 27, -21, -8, -22, 43, -19, -52, -14, -54, 6, 13, 42, -36, -18, -24, 16, -3, -30, 17, -4, -40, -4, 68, -32, 3, -5, -11, 2, -38, -9, -27, -9, 29, 38, 3, -23, 25, 21, -21, 19, 21, -2, 1, 18, 27, -53, 24, -27, -41, 12, -9, 12, -10, -46, 7, -14, -33, -17, 3, 18, -9, 17, -36, -4, -13, 4, -1, 9, -39, 42, -38, 7, -33, -34, 1, 0, -7, 31, -38, 14, -9, -5, -6, -9, 22, 9, -5, 67, -23, 30, -1, 23, -9, 8, 7, -21, -28, 19, 15, 15, 0, 0, -21, 22, -18, 38, -22, -34, -13, 18, 53, -4, -4, -11, -2, -27, 30, 27, -8, -14, 32, -25, -11, -17, -27, 29, 21, -5, -2, 22, 20, -37, 12, -27, 36, 4, 37, 5, -38, 0, -21, 61, -9, 32, -63, 8, -37, 31, -20, -3, 39, 10, -17, -51, 25, 9, -33, -22, -40, -20, -11, 19, -13, -42, 35, 34, 22, -6, 35, -1, 3, 14, 47, 25, -39, 11, 25, -48, 41, -5, -17, 21, 32, -10, -47, 28, -39, 14, -10, 46, 17, 0, 8, 1, -26, -23, -34, 23, -2, 66, -12, 14, -5, -37, -9, 2, -53, -24, -28, 5, -81, -2, 43, -27, -33, -1, 14, 3, -3, 21, 3, -36, 18, -12, 26, -11, -9, -19, -10, -11, -40, -13, -9, 8, -39, 52, -15, -21, 19, 12, 31, -14, -20, -16, 71, -40, 5, 23, 22, -21, -13, -25, -2, 23, -3, 23, 5, -35, -27, 5, -10, 65, -8, 38, -34, 22, -28, -42, -39, 50, -49, 10, 3, -19, -2, -7, 44, -33, 1, -46, -16, -69, -5, 5, -36, -1, 18, 36, -18, 31, -2, 4, 5, 14, -1, 13, -41, 6, 6, -40, -11, 16, 25, 12, 4, 39, -51, -18, -36, -13, 38, 25, -4, -8, 20, -3, -40, -11, -24, 17, 17, 7, 4, -2, -32, -19, -9, 11, 29, 3, -4, 15, -52, 18, -12, -2, 19, 11, 27, 49, -35, -2, -5, -17, -16, 24, 3, -23, -17, -4, 12, -14, 11, -32, 47, 11, 29, 12, 59, 11, -5, 25, -25, 2, -28, 41, -7, 35, -13, 32, 19, -43, -18, -3, -25, -2, -17, -11, -45, 28, 13, -23, -1, 60, -22, 21, -48, -5, -59, -7, 16, -20, 20, 13, -10, -7, -46, -38, 69, 52, -8, -26, 22, -9, 52, 12, 15, -79, 11, -20, -36, -44, -27, -10, -45, 53, 1, -29, -21, 10, 0, 22, 0, -31, 16, 4, -32, -35, -23, 8, -3, -12, -17, 13, -46, -7, 21, -15, -26, -7, 27, 25, 14, 40, -8, -35, -4, -10, 22, 45, 9, 18, -1, 22, 46, 5, 8, -26, -13, -15, -42, 7, -1, -26, -18, -3, 86, -32, -16, 1, -3, -4, 2, -11, -9, 33, 18, 34, -50, 16, 0, -27, -1, 35, -23, 31, 68, -12, -6, 11, -3, 54, 6, -8, 9, -30, 8, -23, 31, -10, -36, 26, -11, -4, 41, -27, -8, -21, -1, -45, 4, -12, 40, -1, -3, 18, 25, -17, -28, -11, -9, -2, -3, 31, 9, 53, -35, 34, -21, -15, 11, 5, -35, 21, 30, 3, -5, 10, 21, 31, -39, -17, 62, 25, 12, 56, -24, -15, -12, -14, -23, -18, -23, -48, 41, 9, 46, -3, 73, -1, -4, -37, -41, -29, 7, -2, 1, 4, 27, -35, 45, 5, -28, -5, 12, 4, -38, -16, -27, 43, 1, 31, -24, -24, 8, -48, 8, -60, 11, 12, 8, -9, 17, 0, 10, 17, -40, 1, 36, -34, 19, -10, -11, 1, 8, 6, 32, -7, 1, 24, -7, -9, -54, 1, 31, -13, -13, -19, -12, 9, 14, 20, 13, -5, -9, 14, -3, 3, 13, 43, 8, 8, -12, -6, 7, -19, -21, -13, 3, 45, 8, -10, -27, -14, 17, -3, -19, 9, 24, 13, 18, 43, 11, -28, -14, 13, -10, 15, 9, -29, -10, 9, -10, 35, 36, 40, -6, 5, -21, 27, 9, 5, -5, -28, -4, 4, 2, 16, -39, -35, 52, 31, 4, -2, -39, -1, -13, 10, 11, 13, 15, -18, -24, 3, -7, 38, 21, 19, 14, -16, -41, -9, 21, -18, -4, -37, 29, -32, -2, -24, -14, -16, -3, 13, 10, -8, -11, -4, -24, 28, 17, 20, 26, -25, 59, 9, -19, 19, -28, 0, 28, -6, -29, -2, 7, -6, -13, -26, 5, -6, 15, 10, 32, -20, 29, 0, -21, -23, -13, -23, 19, -35, 22, 23, -22, 27, 20, -16, 29, 78, 2, 23, -53, -12, -2, -28, 12, 14, 20, -23, 67, -46, 14, -40, -13, 4, 71, 27, 17, -18, -28, -14, 31, 14, 52, 11, -17, 11, 30, -38, -5, 40, 68, 5, -8, 23, -14, 13, -44, -28, 9, -8, -34, 35, -2, 5, 32, -12, -43, -3, 14, -14, -12, 11, 1, -13, 5, 7, 43, 7, 26, -26, 2, 3, 31, -2, -6, 7, 31, 13, -46, 12, 10, -38, 25, 21, -17, -15, 22, -17, 24, 26, -3, -34, 21, -9, 9, 7, 17, 19, -9, -31, 63, -17, -11, -4, 15, -11, 38, 5, 50, 13, 6, -10, 20, 9, 44, 24, 24, 5, 43, 5, 11, 3, -4, -20, -12, -5, -10, -8, -14, -3, 27, 14, -27, 19, 34, 3, -34, 4, 6, 17, 6, -2, 5, -30, 10, 24, 13, 0, 7, -20, 40, 22, -2, 26, 2, 15, 11, 36, -18, -2, -7, 0, 16, 15, 29, 26, 45, 17, 9, 0, -17, -1, -3, -38, 9, -17, 7, -6, -22, -29, -19, 11, -14, 21, 20, 20, 4, 1, 9, -6, -30, 17, 13, -21, 26, -13, -16, -11, -10, 20, 8, -23, 14, 23, 2, -34, -10, 16, -9, 38, -29, 22, -27, 20, -24, 13, -9, 28, 7, 23, 6, -21, -18, -8, 32, -8, -3, -3, -33, -4, 20, -11, 25, -3, 28, -6, 30, 48, 24, 12, -24, 7, 17, -17, -17, 3, 31, 19, 22, 4, -36, -31, -10, 28, 14, -10, -8, -10, -33, 23, -47, 37, -12, 2, 3, 26, 6, 46, 1, 17, 1, -4, 14, 19, 14, 0, -18, 21, 5, -21, 50, -5, 18, -9, 7, 9, 14, 7, 10, -1, -18, -27, 23, -31, 16, 12, 37, -31, -8, -5, 21, 32, -23, -69, 7, 12, -7, -6, -29, -15, 34, -7, -4, -5, -4, -5, 32, -22, -1, -1, -27, -22, 4, -10, 18, 20, 6, -17, -27, 17, 20, 15, -26, -25, -7, 16, -2, 8, 21, -25, -46, -8, 23, -7, 2, -15, 12, -5, -5, -21, 15, -2, -13, 10, 0, -15, -8, 24, -24, 65, 17, 5, -26, 29, -22, -22, -50, -16, -36, 0, -50, -50, -36, 18, 37, 4, 14, 23, -38, -42, 18, 18, -6, -15, -25, -4, 28, 27, 7}

#define TENSOR_CONV2D_3_KERNEL_0_DEC_BITS {7}

#define TENSOR_CONV2D_3_BIAS_0 {-7, -10, -14, -43, -50, 6, 25, 12, -59, -66, -7, -43, -13, 27, 27, -2, -9, -12, -6, 52, 36, 34, 18, -32, -1, -10, -44, -96, -47, 23}

#define TENSOR_CONV2D_3_BIAS_0_DEC_BITS {6}

#define CONV2D_3_BIAS_LSHIFT {4}

#define CONV2D_3_OUTPUT_RSHIFT {7}

#define TENSOR_DENSE_KERNEL_0 {-17, -41, 6, -21, -2, -28, 59, -55, 48, -13, -36, -30, 15, 22, 33, 5, -40, 1, 6, 31, -32, 39, 3, -73, -5, 26, -52, 41, -15, -6, 7, 50, -21, -9, 28, -18, 28, -31, -23, 5, 30, 15, -21, 11, -61, 63, 3, -56, -27, -23, -10, -21, -8, -16, 6, -23, -25, -32, -69, -40, 3, 5, 47, -24, -58, 21, -7, -38, 39, -2, -39, 32, -22, -35, 16, 23, -20, -33, -26, -8, 7, -19, 27, -40, -26, -12, -61, -26, -30, -72, 10, -63, 13, -17, -15, -18, -6, 66, 73, 47, -54, -4, -85, 5, -76, -27, 70, 8, 2, 12, -13, -19, -29, -4, -57, -24, -43, 23, 13, -12, 4, -39, -3, -9, 1, -18, -34, -3, 6, -17, -4, 20, -45, 10, -6, -13, 18, -4, -49, -12, -2, -18, 18, 6, -42, 23, -35, -31, -31, 48, 15, -32, 41, -7, -10, -9, 24, -2, -19, -8, 4, 35, 68, -28, -25, 4, -42, -58, -3, 14, 27, -40, 4, -5, -29, -14, -70, -21, -18, 27, 68, -1, -19, -5, 1, -15, -18, 26, 11, 26, -10, -7, -60, -19, -20, 7, -31, 14, 30, -11, -30, 6, 7, 15, -55, 10, 34, -6, 35, -44, -7, 14, -34, 14, -38, -31, 25, -42, -22, 24, 2, 31, -15, 15, -25, 7, -19, 2, 68, -9, -15, 10, 16, -45, -25, -12, -16, 0, 44, -27, 18, -7, 20, 10, -31, -41, 44, -73, 73, -22, -26, -23, 27, -8, 14, 6, -35, -17, -18, -3, -12, 43, 51, -77, -7, 74, -85, 28, -2, 25, 11, 30, 1, -38, 6, 1, 15, -26, -12, -15, 46, 34, -40, -10, -51, 67, 4, -42, -29, -26, -23, -44, -21, -45, 26, -26, -14, -6, -32, -16, 3, 19, 18, -3, -48, 2, -32, -46, 49, -14, -85, 7, -45, -11, 41, 42, -6, -18, -29, -44, -5, -22, 13, -67, -20, 12, -42, -24, -5, -49, -10, -41, 9, 19, 17, -9, 0, 53, 50, 19, -26, 7, -52, 4, -54, -8, 75, 11, -8, 53, -21, -4, -47, -4, -51, -17, -35, 27, -43, -34, 11, -58, 27, -18, 15, -23, -12, 1, 20, -12, 9, -3, -4, 11, -30, -10, 30, -5, -10, 2, -17, -13, 13, 23, -46, 9, 21, -21, -32, 45, 2, -44, 22, -1, -19, 31, 0, 7, -3, 4, 23, 20, 65, 15, 3, -33, -25, -43, -24, -2, 14, -2, 27, -41, -20, -4, -42, -31, -22, 49, 39, 9, -57, 4, -30, 4, -32, 29, 48, 12, 22, -16, -67, -8, 10, 7, -40, 9, 2, 9, -25, -5, 37, 28, -45, 25, 12, -13, 15, -37, -5, 27, -14, 39, 9, -8, 41, -10, -10, 15, 0, 17, -5, 15, 5, 13, -3, -33, 47, -3, 2, -25, 35, -39, -18, 16, -13, 6, 51, -38, 45, 17, 28, -49, 34, 2, -52, 18, 7, -2, -54, -26, 2, 6, -29, -1, -82, -75, -26, -25, 51, -4, -9, -19, -42, -17, -68, -38, 8, -4, -13, -15, 1, 6, 64, -37, -26, -5, -11, 61, 6, 5, -37, 42, -62, -59, -49, 7, -22, 26, 7, -44, 27, 27, 44, 48, 1, -24, -7, -54, 10, 20, 12, 41, -30, -31, -32, 5, 22, 9, -27, -24, -20, 107, -12, -9, 27, -49, 17, -16, -26, -9, 25, 31, -40, -42, -10, -43, -8, 31, 3, 24, 17, 29, 18, -14, 68, 44, -1, -13, -120, -55, -46, -69, -65, 22, 3, -38, 42, 46, 1, -24, -66, -3, 27, -45, 25, -35, -16, -2, -6, -14, 15, 7, 22, -25, -24, -53, -15, -6, 66, 7, -26, -6, -15, -39, 42, 13, -9, -13, -27, -35, -7, 23, -3, -24, 52, 27, -15, 12, 17, 32, 16, 8, 11, 5, -29, 19, -2, -17, 14, -41, 65, 5, -69, -59, 9, 27, -8, -66, 9, 45, 7, -33, -11, -9, 10, -19, 5, -32, -23, -42, 33, 2, -15, -34, -13, 3, -10, 17, -10, -14, -11, 27, 66, -6, 30, -7, 17, 10, -10, 7, -6, -26, 0, -19, -36, 27, -16, 0, -36, 9, -4, 0, 28, 4, 4, -31, -1, 15, -26, -33, -26, 4, -36, -23, -13, -22, -22, 14, 41, 32, -34, -15, -1, -50, 41, 11, -37, -23, 32, 57, 53, -38, 20, -10, -25, -2, 23, -7, -35, 4, 21, 9, -45, -22, -66, -34, -46, -26, 58, -11, 34, 44, -26, -36, -67, -43, -35, 0, 3, -2, 30, 19, 35, -44, -12, 20, -40, 51, -19, 8, -20, 63, -13, -23, -52, 29, -10, -7, -29, -50, 34, 40, 47, 40, -11, -43, -31, -42, -22, -8, 18, 12, -14, -46, -13, 25, 6, 23, -41, -42, -25, 64, -2, -15, 6, -62, -55, -10, -34, -40, 24, 43, -15, -43, 30, -5, 9, 20, 1, 23, -33, 25, -16, -1, 44, 44, 16, 2, -45, -23, -5, -41, -19, 16, -14, -36, 28, 38, -28, -16, -44, 8, -3, -51, 35, -14, 14, 6, -6, 2, 40, 0, -17, -57, -5, -42, -20, 8, 21, -21, 1, 3, -14, -32, 70, 7, -14, -7, -32, -41, -13, -22, 22, -16, 66, 42, -3, -42, -21, 17, 6, -31, -11, 5, -4, 15, -29, -28, 30, -2, -8, 15, -55, -19, -5, 17, -12, -46, -30, 38, 5, -18, -4, 16, 5, 3, 24, -34, 7, -38, 35, 17, -19, -8, -8, -14, -29, 12, -11, -35, 7, 7, 47, -18, 31, -6, -6, 1, -14, -11, 3, 10, 18, 9, -42, -2, 6, -9, -4, 49, -31, 11, 30, -7, 9, -15, -23, -16, -12, -48, 15, 52, 5, -18, 14, -28, -15, 1, 13, 39, -51, -30, -13, -24, 52, -8, 2, -5, -35, 11, -10, 62, -23, -27, -17, 36, -1, -53, -22, 46, -16, 57, -31, -47, 37, -43, 32, -43, 14, 20, 0, -4, -33, -11, -52, 40, -51, -31, -21, 20, -18, -16, -22, -8, -23, 29, 18, -38, -42, 15, -21, -58, 14, 4, -1, -27, -6, 7, -12, 13, -36, -2, -48, 24, -10, 42, -24, 59, -45, 21, -11, 67, -37, -31, 3, 9, 16, -32, 0, 31, -49, 41, -35, -44, 25, -19, 5, -43, 7, 27, -19, 40, 15, 7, -33, -24, -64, -48, -34, 8, 28, -42, -16, 14, -23, 23, 13, -18, -17, 18, -9, -16, -4, 34, -6, -39, -32, 23, -2, 12, -11, 4, -34, 5, -26, 19, -15, 37, -9, -43, -10, -10, 17, 28, -30, 51, -49, 30, 3, 55, 29, -15, -21, 29, -49, -24, 37, 39, 16, -62, -23, 52, -45, -32, -8, -21, -12, 5, -8, -10, 4, -17, -2, -29, 1, 17, -38, 4, 61, -25, -8, -54, -13, -4, -30, 43, -20, 10, -67, -9, -14, 10, -3, 17, 10, -24, -11, -16, -12, -46, 9, -13, 7, -6, -37, 34, -52, 21, 16, 13, -12, 3, -40, 32, -33, 1, 40, 51, 16, -58, -52, 42, 3, -25, 10, -19, -2, -13, -13, -41, -17, 3, -7, 1, 1, 12, -52, 23, 50, -14, 26, -42, -8, 38, -18, 46, 0, -12, -48, -1, -23, 16, 30, 28, -13, 6, -25, -15, -6, -35, 1, -8, 10, 19, -9, -30, 9, -27, -18, -18, 4, 10, -33, 4, -6, 23, 16, 38, 44, 41, 13, -16, -11, -33, 16, -9, 56, 38, 29, 20, 16, -20, -19, 51, -14, 8, 6, 11, -21, 7, -23, 37, 1, -18, 18, -12, 17, 19, -20, -5, 4, -7, -15, 6, -30, -25, 7, -4, -9, -30, 10, -6, 17, -2, 19, -22, 38, -12, -16, -6, -3, -9, -30, 5, -33, 11, 16, 27, 35, 19, 28, -38, 1, -7, 25, -12, 43, 38, 29, 22, 9, -7, -4, 34, 24, 1, -30, 4, -26, 3, 6, 30, 6, -4, -8, -18, 19, 16, -17, -3, 3, 13, 11, 9, -18, -35, 13, 17}

#define TENSOR_DENSE_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_BIAS_0 {-47, -3, -39, -27, -13, 6, -33, -41, 1, -15, 74}

#define TENSOR_DENSE_BIAS_0_DEC_BITS {8}

#define DENSE_BIAS_LSHIFT {2}

#define DENSE_OUTPUT_RSHIFT {8}


/* output q format for each layer */
#define INPUT_1_OUTPUT_DEC 7
#define INPUT_1_OUTPUT_OFFSET 0
#define CONV2D_OUTPUT_DEC 3
#define CONV2D_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_OUTPUT_DEC 3
#define LEAKY_RE_LU_OUTPUT_OFFSET 0
#define MAX_POOLING2D_OUTPUT_DEC 3
#define MAX_POOLING2D_OUTPUT_OFFSET 0
#define CONV2D_1_OUTPUT_DEC 3
#define CONV2D_1_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_1_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_1_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_1_OUTPUT_DEC 3
#define LEAKY_RE_LU_1_OUTPUT_OFFSET 0
#define MAX_POOLING2D_1_OUTPUT_DEC 3
#define MAX_POOLING2D_1_OUTPUT_OFFSET 0
#define CONV2D_2_OUTPUT_DEC 3
#define CONV2D_2_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_2_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_2_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_2_OUTPUT_DEC 3
#define LEAKY_RE_LU_2_OUTPUT_OFFSET 0
#define MAX_POOLING2D_2_OUTPUT_DEC 3
#define MAX_POOLING2D_2_OUTPUT_OFFSET 0
#define CONV2D_3_OUTPUT_DEC 3
#define CONV2D_3_OUTPUT_OFFSET 0
#define BATCH_NORMALIZATION_3_OUTPUT_DEC 3
#define BATCH_NORMALIZATION_3_OUTPUT_OFFSET 0
#define LEAKY_RE_LU_3_OUTPUT_DEC 3
#define LEAKY_RE_LU_3_OUTPUT_OFFSET 0
#define MAX_POOLING2D_3_OUTPUT_DEC 3
#define MAX_POOLING2D_3_OUTPUT_OFFSET 0
#define FLATTEN_OUTPUT_DEC 3
#define FLATTEN_OUTPUT_OFFSET 0
#define DENSE_OUTPUT_DEC 2
#define DENSE_OUTPUT_OFFSET 0
#define SOFTMAX_OUTPUT_DEC 7
#define SOFTMAX_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[744] = {0};

const nnom_shape_data_t tensor_input_1_dim[] = {62, 12, 1, 0};
const nnom_qformat_param_t tensor_input_1_dec[] = {7};
const nnom_qformat_param_t tensor_input_1_offset[] = {0};
const nnom_tensor_t tensor_input_1 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_input_1_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_input_1_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_input_1_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t input_1_config = {
    .super = {.name = "input_1"},
    .tensor = (nnom_tensor_t*)&tensor_input_1
};
const int8_t tensor_conv2d_kernel_0_data[] = TENSOR_CONV2D_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_kernel_0_dim[] = {8, 5, 1, 8};
const nnom_qformat_param_t tensor_conv2d_kernel_0_dec[] = TENSOR_CONV2D_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_kernel_0 = {
    .p_data = (void*)tensor_conv2d_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_bias_0_data[] = TENSOR_CONV2D_BIAS_0;

const nnom_shape_data_t tensor_conv2d_bias_0_dim[] = {8, 0};
const nnom_qformat_param_t tensor_conv2d_bias_0_dec[] = TENSOR_CONV2D_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_bias_0 = {
    .p_data = (void*)tensor_conv2d_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_output_shift[] = CONV2D_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_bias_shift[] = CONV2D_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_config = {
    .super = {.name = "conv2d"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_bias_shift, 
    .filter_size = 8,
    .kernel_size = {8, 5},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_config = {
    .super = {.name = "max_pooling2d"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_1_kernel_0_data[] = TENSOR_CONV2D_1_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_1_kernel_0_dim[] = {4, 3, 8, 16};
const nnom_qformat_param_t tensor_conv2d_1_kernel_0_dec[] = TENSOR_CONV2D_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_1_kernel_0 = {
    .p_data = (void*)tensor_conv2d_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_1_bias_0_data[] = TENSOR_CONV2D_1_BIAS_0;

const nnom_shape_data_t tensor_conv2d_1_bias_0_dim[] = {16, 0};
const nnom_qformat_param_t tensor_conv2d_1_bias_0_dec[] = TENSOR_CONV2D_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_1_bias_0 = {
    .p_data = (void*)tensor_conv2d_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_1_output_shift[] = CONV2D_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_1_bias_shift[] = CONV2D_1_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_1_config = {
    .super = {.name = "conv2d_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_1_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_1_bias_shift, 
    .filter_size = 16,
    .kernel_size = {4, 3},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_1_config = {
    .super = {.name = "max_pooling2d_1"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_2_kernel_0_data[] = TENSOR_CONV2D_2_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_2_kernel_0_dim[] = {3, 2, 16, 25};
const nnom_qformat_param_t tensor_conv2d_2_kernel_0_dec[] = TENSOR_CONV2D_2_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_2_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_2_kernel_0 = {
    .p_data = (void*)tensor_conv2d_2_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_2_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_2_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_2_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_2_bias_0_data[] = TENSOR_CONV2D_2_BIAS_0;

const nnom_shape_data_t tensor_conv2d_2_bias_0_dim[] = {25, 0};
const nnom_qformat_param_t tensor_conv2d_2_bias_0_dec[] = TENSOR_CONV2D_2_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_2_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_2_bias_0 = {
    .p_data = (void*)tensor_conv2d_2_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_2_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_2_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_2_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_2_output_shift[] = CONV2D_2_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_2_bias_shift[] = CONV2D_2_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_2_config = {
    .super = {.name = "conv2d_2"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_2_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_2_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_2_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_2_bias_shift, 
    .filter_size = 25,
    .kernel_size = {3, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_2_config = {
    .super = {.name = "max_pooling2d_2"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_3_kernel_0_data[] = TENSOR_CONV2D_3_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_3_kernel_0_dim[] = {2, 2, 25, 30};
const nnom_qformat_param_t tensor_conv2d_3_kernel_0_dec[] = TENSOR_CONV2D_3_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_3_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_3_kernel_0 = {
    .p_data = (void*)tensor_conv2d_3_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_3_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_3_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_3_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_3_bias_0_data[] = TENSOR_CONV2D_3_BIAS_0;

const nnom_shape_data_t tensor_conv2d_3_bias_0_dim[] = {30, 0};
const nnom_qformat_param_t tensor_conv2d_3_bias_0_dec[] = TENSOR_CONV2D_3_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_3_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_3_bias_0 = {
    .p_data = (void*)tensor_conv2d_3_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_3_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_3_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_3_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_3_output_shift[] = CONV2D_3_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_3_bias_shift[] = CONV2D_3_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_3_config = {
    .super = {.name = "conv2d_3"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_3_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_3_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_3_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_3_bias_shift, 
    .filter_size = 30,
    .kernel_size = {2, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_3_config = {
    .super = {.name = "max_pooling2d_3"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 2},
    .stride_size = {2, 2},
    .num_dim = 2
};

const nnom_flatten_config_t flatten_config = {
    .super = {.name = "flatten"}
};
const int8_t tensor_dense_kernel_0_data[] = TENSOR_DENSE_KERNEL_0;

const nnom_shape_data_t tensor_dense_kernel_0_dim[] = {120, 11};
const nnom_qformat_param_t tensor_dense_kernel_0_dec[] = TENSOR_DENSE_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_kernel_0 = {
    .p_data = (void*)tensor_dense_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_bias_0_data[] = TENSOR_DENSE_BIAS_0;

const nnom_shape_data_t tensor_dense_bias_0_dim[] = {11, 0};
const nnom_qformat_param_t tensor_dense_bias_0_dec[] = TENSOR_DENSE_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_bias_0 = {
    .p_data = (void*)tensor_dense_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_output_shift[] = DENSE_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_bias_shift[] = DENSE_BIAS_LSHIFT;
const nnom_dense_config_t dense_config = {
    .super = {.name = "dense"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_bias_shift
};

const nnom_softmax_config_t softmax_config = {
    .super = {.name = "softmax"}
};
static int8_t nnom_output_data[11] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {11, 0};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(void)
{
	static nnom_model_t model;
	nnom_layer_t* layer[17];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&input_1_config);
	layer[1] = model.hook(conv2d_s(&conv2d_config), layer[0]);
	layer[2] = model.active(act_leaky_relu(0.100000f), layer[1]);
	layer[3] = model.hook(maxpool_s(&max_pooling2d_config), layer[2]);
	layer[4] = model.hook(conv2d_s(&conv2d_1_config), layer[3]);
	layer[5] = model.active(act_leaky_relu(0.100000f), layer[4]);
	layer[6] = model.hook(maxpool_s(&max_pooling2d_1_config), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_2_config), layer[6]);
	layer[8] = model.active(act_leaky_relu(0.100000f), layer[7]);
	layer[9] = model.hook(maxpool_s(&max_pooling2d_2_config), layer[8]);
	layer[10] = model.hook(conv2d_s(&conv2d_3_config), layer[9]);
	layer[11] = model.active(act_leaky_relu(0.100000f), layer[10]);
	layer[12] = model.hook(maxpool_s(&max_pooling2d_3_config), layer[11]);
	layer[13] = model.hook(flatten_s(&flatten_config), layer[12]);
	layer[14] = model.hook(dense_s(&dense_config), layer[13]);
	layer[15] = model.hook(softmax_s(&softmax_config), layer[14]);
	layer[16] = model.hook(output_s(&output0_config), layer[15]);
	model_compile(&model, layer[0], layer[16]);
	return &model;
}
